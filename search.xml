<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>iOS原生域名解析</title>
      <link href="/2020/04/15/iOS%20%E5%8E%9F%E7%94%9F%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/"/>
      <url>/2020/04/15/iOS%20%E5%8E%9F%E7%94%9F%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h3 id="需求背景"><a href="#需求背景" class="headerlink" title="需求背景"></a>需求背景</h3><p>有多个域名，使用串行逐一解析/并发解析，只要当解析出一个，先给出<br>解析结果。后续继续解析或取消解析。预留了httpDNS的混合使用，后续考虑添加</p><h3 id="方法封装"><a href="#方法封装" class="headerlink" title="方法封装"></a>方法封装</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// DNS解析</span></span><br><span class="line"><span class="comment">/// @param hosts 待解析的域名数组</span></span><br><span class="line"><span class="comment">/// @param callBackQueue 回调执行队列,默认global_queue</span></span><br><span class="line"><span class="comment">/// @param timeOut 超时</span></span><br><span class="line"><span class="comment">/// @param completion 回调</span></span><br><span class="line"><span class="comment">/// bestHost 最先解析出来的ip，可能为空</span></span><br><span class="line"><span class="comment">/// hosters所有解析出来的域名对应的ip，可能为空</span></span><br><span class="line"><span class="comment">/// coast 耗时</span></span><br><span class="line"><span class="comment">/// queueAttr 串行/并发</span></span><br><span class="line"><span class="comment">/// useHttpDNS 使用HttpDNS（预留，未实现）</span></span><br><span class="line"><span class="comment">/// error error</span></span><br><span class="line">+(<span class="keyword">void</span>)resolution:(<span class="keyword">nonnull</span> <span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span>*&gt;*)hosts queueAttr:(<span class="keyword">nonnull</span> dispatch_queue_attr_t)queueAttr useHttpDNS:(<span class="built_in">BOOL</span>)useHttpDNS dispatchCallBackQueue:(<span class="keyword">nullable</span> <span class="built_in">dispatch_queue_t</span>)callBackQueue timeOut:(<span class="built_in">NSTimeInterval</span>)timeOut completion:(<span class="keyword">void</span>(^)(<span class="built_in">NSString</span> * _Nullable bestHostIP,<span class="built_in">NSString</span> * _Nullable bestHost,<span class="built_in">NSDictionary</span>* _Nullable hosters,<span class="built_in">NSTimeInterval</span> coast, <span class="built_in">NSError</span> * _Nullable error))completion&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CFAbsoluteTime</span> start = <span class="built_in">CFAbsoluteTimeGetCurrent</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (callBackQueue == <span class="literal">nil</span>) &#123;</span><br><span class="line">        callBackQueue = dispatch_get_global_queue(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> (^exceptionHandler)(<span class="built_in">NSException</span> *exception) = ^(<span class="built_in">NSException</span> *exception)&#123;</span><br><span class="line">        <span class="built_in">dispatch_async</span>(callBackQueue, ^&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">CFAbsoluteTime</span> end = <span class="built_in">CFAbsoluteTimeGetCurrent</span>();</span><br><span class="line">            <span class="built_in">NSTimeInterval</span> coast = end - start;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"resolutionCompleteOnException,thread:%@,coast:%.2f"</span>,[<span class="built_in">NSThread</span> currentThread],coast);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (completion) &#123;</span><br><span class="line">                completion(<span class="literal">nil</span>,<span class="literal">nil</span>,<span class="literal">nil</span>,coast,[<span class="built_in">NSError</span> errorWithDomain:[<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"解析异常,name:%@,reason:%@"</span>,exception.name,exception.reason] code:<span class="number">-9999</span> userInfo:exception.userInfo]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">@try</span> &#123;</span><br><span class="line"><span class="comment">//        __block NSError * resolutionError = nil;</span></span><br><span class="line">        </span><br><span class="line">        __block <span class="built_in">NSMutableArray</span> &lt;<span class="built_in">NSDictionary</span>*&gt;*tempIps = [[<span class="built_in">NSMutableArray</span> alloc] init];</span><br><span class="line">        __block <span class="built_in">NSMutableDictionary</span> * results = [[<span class="built_in">NSMutableDictionary</span> alloc]init];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">NSLock</span> * saveResultLock = [[<span class="built_in">NSLock</span> alloc]init];</span><br><span class="line">        saveResultLock.name = <span class="string">@"Host.resolution.lock"</span>;</span><br><span class="line">                </span><br><span class="line">        dispatch_semaphore_t dsema = dispatch_semaphore_create(<span class="number">0</span>);</span><br><span class="line">        </span><br><span class="line">        dispatch_group_t g = dispatch_group_create();</span><br><span class="line">        <span class="built_in">dispatch_queue_t</span> resolutionQueue = dispatch_queue_create(<span class="string">"Host.resolution"</span>, dispatch_queue_attr_make_with_qos_class (queueAttr, QOS_CLASS_USER_INITIATED,<span class="number">-1</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSMutableArray</span> * handHostArray = [<span class="built_in">NSMutableArray</span> arrayWithCapacity:hosts.count];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//去除http头尾</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">NSString</span> * host <span class="keyword">in</span> hosts) &#123;</span><br><span class="line">            <span class="built_in">NSString</span> * orignalHost = host.copy;</span><br><span class="line">            <span class="built_in">NSString</span> * newHost = host.copy;</span><br><span class="line">            <span class="keyword">if</span> (host != <span class="literal">nil</span> &amp;&amp; host.length &gt;<span class="number">0</span> &amp;&amp; [host hasPrefix:<span class="string">@"http"</span>]) &#123;</span><br><span class="line">                newHost = [<span class="built_in">NSURL</span> URLWithString:host].host;</span><br><span class="line">                <span class="keyword">if</span> (newHost == <span class="literal">nil</span>) &#123;</span><br><span class="line">                    newHost = orignalHost;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            [handHostArray addObject:newHost];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">NSString</span> * host <span class="keyword">in</span> handHostArray) &#123;</span><br><span class="line">            </span><br><span class="line">            dispatch_group_async(g, resolutionQueue, ^&#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">@try</span> &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">                    <span class="built_in">NSLog</span>(<span class="string">@"⚠️handHost:%@,thread:%@"</span>,host,[<span class="built_in">NSThread</span> currentThread]);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">                    <span class="built_in">CFHostRef</span> hostRef = <span class="built_in">CFHostCreateWithName</span>(kCFAllocatorDefault, (__bridge <span class="built_in">CFStringRef</span>)host);</span><br><span class="line">                    <span class="keyword">if</span> (hostRef)&#123;</span><br><span class="line">                        <span class="comment">//CFStreamError * error = NULL;</span></span><br><span class="line">                        Boolean result = <span class="built_in">CFHostStartInfoResolution</span>(hostRef, kCFHostAddresses, <span class="literal">NULL</span>);</span><br><span class="line">                        <span class="keyword">if</span> (result == <span class="literal">TRUE</span>)&#123;</span><br><span class="line">                            <span class="built_in">NSArray</span> *addresses = (__bridge <span class="built_in">NSArray</span>*)<span class="built_in">CFHostGetAddressing</span>(hostRef, &amp;result);</span><br><span class="line">                            <span class="built_in">NSMutableArray</span> *addressStrings = [[<span class="built_in">NSMutableArray</span> alloc]initWithCapacity:addresses.count];</span><br><span class="line">                            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; addresses.count; i++)&#123;</span><br><span class="line">                                <span class="keyword">struct</span> sockaddr_in* remoteAddr;</span><br><span class="line">                                <span class="built_in">CFDataRef</span> saData = (<span class="built_in">CFDataRef</span>)<span class="built_in">CFArrayGetValueAtIndex</span>((__bridge <span class="built_in">CFArrayRef</span>)addresses, i);</span><br><span class="line">                                remoteAddr = (<span class="keyword">struct</span> sockaddr_in*)<span class="built_in">CFDataGetBytePtr</span>(saData);</span><br><span class="line">                                <span class="keyword">if</span>(remoteAddr != <span class="literal">NULL</span>)&#123;</span><br><span class="line">                                    <span class="keyword">const</span> <span class="keyword">char</span> *strIP = inet_ntoa(remoteAddr-&gt;sin_addr);</span><br><span class="line">                                    <span class="built_in">NSString</span> *strIPString =[<span class="built_in">NSString</span> stringWithCString:strIP encoding:<span class="built_in">NSASCIIStringEncoding</span>];</span><br><span class="line">                                    </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">                                    <span class="built_in">NSLog</span>(<span class="string">@"♻️RESOLVED:%@-&gt;%d:&lt;%@&gt;"</span>, host, i, strIPString);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">                                    <span class="keyword">if</span> (strIPString != <span class="literal">nil</span> &amp;&amp; strIPString.length &gt; <span class="number">0</span> &amp;&amp; [<span class="built_in">CLSDKNetWorkingManager</span> checkIPValid:strIPString]) &#123;</span><br><span class="line">                                        </span><br><span class="line">                                        [addressStrings addObject:strIPString];</span><br><span class="line"></span><br><span class="line">                                        <span class="built_in">NSMutableDictionary</span> * hostIP = [<span class="built_in">NSMutableDictionary</span> dictionary];</span><br><span class="line">                                        hostIP[<span class="string">@"ip"</span>] = strIPString;</span><br><span class="line">                                        hostIP[<span class="string">@"host"</span>] = host;</span><br><span class="line"></span><br><span class="line">                                        [saveResultLock lock];</span><br><span class="line">                                        [tempIps addObject:hostIP];</span><br><span class="line">                                        [saveResultLock unlock];</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    </span><br><span class="line">                                &#125;</span><br><span class="line"><span class="comment">//                                CFRelease(saData);</span></span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span> (addressStrings.count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                </span><br><span class="line">                                [saveResultLock lock];</span><br><span class="line">                                results[host] = addressStrings;</span><br><span class="line">                                [saveResultLock unlock];</span><br><span class="line">                                </span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="built_in">CFRelease</span>(hostRef);</span><br><span class="line"></span><br><span class="line">                    [saveResultLock lock];</span><br><span class="line">                    <span class="built_in">NSInteger</span> tempIpsCount = tempIps.count;</span><br><span class="line">                    [saveResultLock unlock];</span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">if</span> (tempIpsCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        dispatch_semaphore_signal(dsema);</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">                    <span class="built_in">NSLog</span>(<span class="string">@"✅handHostComplete:%@,thread:%@,"</span>,host,[<span class="built_in">NSThread</span> currentThread]);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">                    </span><br><span class="line">                &#125; <span class="keyword">@catch</span> (<span class="built_in">NSException</span> *exception) &#123;</span><br><span class="line">                    <span class="built_in">NSLog</span>(<span class="string">@"resolutionException:name:%@,reason:%@"</span>,exception.name,exception.reason);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        dispatch_group_notify(g, resolutionQueue, ^&#123;</span><br><span class="line">            <span class="comment">//全部执行完毕</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"group_notify_completed,thread:%@"</span>,<span class="built_in">NSThread</span>.currentThread);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            dispatch_semaphore_signal(dsema);</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">dispatch_async</span>(callBackQueue, ^&#123;</span><br><span class="line">            </span><br><span class="line">            dispatch_time_t timeOut_t = DISPATCH_TIME_FOREVER;</span><br><span class="line">            <span class="keyword">if</span> (timeOut &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                timeOut_t = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(timeOut * <span class="built_in">NSEC_PER_SEC</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"⚠️WaittingForResolution:%@,thread:%@"</span>,tempIps,[<span class="built_in">NSThread</span> currentThread]);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            dispatch_semaphore_wait(dsema,timeOut_t);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">CFAbsoluteTime</span> end = <span class="built_in">CFAbsoluteTimeGetCurrent</span>();</span><br><span class="line">            <span class="built_in">NSTimeInterval</span> coast = end - start;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"✅resolutionComplete:%@,thread:%@,coast:%.2f"</span>,tempIps,[<span class="built_in">NSThread</span> currentThread],coast);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line"><span class="comment">//            //取消正在进行的解析</span></span><br><span class="line"><span class="comment">//            dispatch_async(resolutionQueue, ^&#123;</span></span><br><span class="line"><span class="comment">//                @try &#123;</span></span><br><span class="line"><span class="comment">//                    NSMutableArray * temphosts = [handHostArray mutableCopy];</span></span><br><span class="line"><span class="comment">//                    [saveResultLock lock];</span></span><br><span class="line"><span class="comment">//                    [temphosts removeObjectsInArray:results.allKeys];</span></span><br><span class="line"><span class="comment">//                    [saveResultLock unlock];</span></span><br><span class="line"><span class="comment">//                    </span></span><br><span class="line"><span class="comment">//                    for (NSString *hosting in temphosts) &#123;</span></span><br><span class="line"><span class="comment">//                        CFHostRef hostRef = CFHostCreateWithName(kCFAllocatorDefault, (__bridge CFStringRef)hosting);</span></span><br><span class="line"><span class="comment">//#ifdef DEBUG</span></span><br><span class="line"><span class="comment">//                        NSLog(@"✅resolutionCanceling:%@,thread:%@,coast:%.2f",hosting,[NSThread currentThread],coast);</span></span><br><span class="line"><span class="comment">//#endif</span></span><br><span class="line"><span class="comment">//                        CFHostCancelInfoResolution(hostRef, kCFHostAddresses);</span></span><br><span class="line"><span class="comment">//                        CFRelease(hostRef);</span></span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line"><span class="comment">//                &#125; @catch (NSException *exception) &#123;</span></span><br><span class="line"><span class="comment">//                    NSLog(@"cancelException:name:%@,reason:%@",exception.name,exception.reason);</span></span><br><span class="line"><span class="comment">//                &#125;</span></span><br><span class="line"><span class="comment">//            &#125;);</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (completion) &#123;</span><br><span class="line">                </span><br><span class="line">                [saveResultLock lock];</span><br><span class="line">                <span class="built_in">NSInteger</span> tempIpsCount = tempIps.count;</span><br><span class="line">                [saveResultLock unlock];</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (tempIpsCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    </span><br><span class="line">                    [saveResultLock lock];</span><br><span class="line">                    <span class="built_in">NSDictionary</span> * firstHost = tempIps.firstObject;</span><br><span class="line">                    [saveResultLock unlock];</span><br><span class="line">                    </span><br><span class="line">                    <span class="built_in">NSString</span> * ip = firstHost[<span class="string">@"ip"</span>];</span><br><span class="line">                    <span class="built_in">NSString</span> * host = firstHost[<span class="string">@"host"</span>];</span><br><span class="line"></span><br><span class="line">                    completion(ip,host,results.copy,coast,<span class="literal">nil</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    completion(<span class="literal">nil</span>,<span class="literal">nil</span>,<span class="literal">nil</span>,coast,[<span class="built_in">NSError</span> errorWithDomain:<span class="string">@"resolutionError"</span> code:<span class="number">-9999</span> userInfo:<span class="literal">nil</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">@catch</span> (<span class="built_in">NSException</span> *exception) &#123;</span><br><span class="line">        exceptionHandler(exception);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//j检查IP是否是常规IP</span></span><br><span class="line">+(<span class="built_in">BOOL</span>)checkIPValid:(<span class="built_in">NSString</span> *)ip&#123;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//https://blog.csdn.net/weixin_34128237/article/details/85034993?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-12&amp;utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-12</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">BOOL</span> valid = <span class="literal">YES</span>;</span><br><span class="line">    <span class="keyword">@try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="literal">nil</span> || ![ip isKindOfClass:<span class="built_in">NSString</span>.class] || ip.length == <span class="number">0</span> ) &#123;</span><br><span class="line">            valid = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSArray</span> * blackList = @[<span class="string">@"127.0.0.1"</span>,<span class="string">@"0.0.0.0"</span>,<span class="string">@"224.0.0.1"</span>,<span class="string">@"255.255.255.255"</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ([blackList containsObject:ip]) &#123;</span><br><span class="line">            valid = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ([ip containsString:<span class="string">@" "</span>]) &#123;</span><br><span class="line">            valid = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ([ip hasPrefix:<span class="string">@"##"</span>]) &#123;</span><br><span class="line">            valid = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ([ip hasPrefix:<span class="string">@"169.254."</span>]) &#123;</span><br><span class="line">            valid = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ([ip hasPrefix:<span class="string">@"10."</span>]) &#123;</span><br><span class="line">            valid = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ([ip hasPrefix:<span class="string">@"192.168."</span>]) &#123;</span><br><span class="line">            valid = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ([ip hasPrefix:<span class="string">@"172."</span>]) &#123;</span><br><span class="line">            <span class="built_in">NSArray</span> * ips = [ip componentsSeparatedByString:<span class="string">@"."</span>];</span><br><span class="line">            <span class="keyword">if</span> (ips.count == <span class="number">4</span>) &#123;</span><br><span class="line">                <span class="built_in">NSString</span> * ip1 = ips[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span> (ip1.integerValue &gt;=<span class="number">16</span> &amp;&amp; ip1.integerValue &lt;=<span class="number">32</span>) &#123;</span><br><span class="line">                    valid = <span class="literal">NO</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">@catch</span> (<span class="built_in">NSException</span> *exception) &#123;</span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">@finally</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> valid;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    [<span class="built_in">CLSDKNetWorkingManager</span> resolution:API_SDK_URL queueAttr:DISPATCH_QUEUE_SERIAL useHttpDNS:<span class="literal">NO</span> dispatchCallBackQueue:<span class="literal">nil</span> timeOut:timeOut &gt; <span class="number">1.0</span> ? timeOut<span class="number">-1.0</span> : timeOut completion:^(<span class="built_in">NSString</span> * _Nullable bestHostIP, <span class="built_in">NSString</span> * _Nullable bestHost, <span class="built_in">NSDictionary</span> * _Nullable hosters, <span class="built_in">NSTimeInterval</span> coast, <span class="built_in">NSError</span> * _Nullable error) &#123;</span><br><span class="line">        </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"✅bestHostIP:%@ bestHost:%@ \nhosters:%@ \ncoast:%.2f \n"</span>,bestHostIP,bestHost,hosters,coast);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;];</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>iOS绘制高德地图自定义形状气泡（笔记）</title>
      <link href="/2018/07/09/iOS%E7%BB%98%E5%88%B6%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BE%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B0%94%E6%B3%A1/"/>
      <url>/2018/07/09/iOS%E7%BB%98%E5%88%B6%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BE%E8%87%AA%E5%AE%9A%E4%B9%89%E6%B0%94%E6%B3%A1/</url>
      
        <content type="html"><![CDATA[<p>自定义AnnotationView继承MAAnnotationView</p><p><code>.h</code>:</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;MAMapKit/MAMapKit.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">WorkerOrderOnMapAnimationView</span> : <span class="title">MAAnnotationView</span></span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>) <span class="built_in">UILabel</span> *label;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p><code>.m</code>:</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"WorkerOrderOnMapAnimationView.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"MapPointModel.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">WorkerOrderOnMapAnimationView</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)initWithAnnotation:(<span class="keyword">id</span>&lt;<span class="built_in">MKAnnotation</span>&gt;)annotation reuseIdentifier:(<span class="built_in">NSString</span> *)reuseIdentifier&#123;</span><br><span class="line">    <span class="keyword">self</span> = [<span class="keyword">super</span> initWithAnnotation:annotation reuseIdentifier:reuseIdentifier];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.backgroundColor = [<span class="built_in">UIColor</span> clearColor];</span><br><span class="line"></span><br><span class="line">        MapPointModel * mapPointModel = (MapPointModel *)annotation;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.annotation = mapPointModel;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.centerOffset = <span class="built_in">CGPointMake</span>(<span class="number">0</span>, <span class="number">-12</span>);</span><br><span class="line">        <span class="comment">//        在大头针旁边加一个label</span></span><br><span class="line">        <span class="keyword">self</span>.label = [[<span class="built_in">UILabel</span> alloc]init];</span><br><span class="line">        [<span class="keyword">self</span> addSubview:<span class="keyword">self</span>.label];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.label.textColor = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">        <span class="keyword">self</span>.label.textAlignment = <span class="built_in">NSTextAlignmentCenter</span>;</span><br><span class="line">        <span class="keyword">self</span>.label.font = kUHSystemFontWithSize(<span class="number">13</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.label.text  = mapPointModel.title;</span><br><span class="line">        <span class="built_in">CGFloat</span> width =  [mapPointModel.title widthWithHeight:<span class="number">20</span> font:AdaptedWidthValue(<span class="number">13</span>)];</span><br><span class="line">        <span class="keyword">self</span>.label.frame = <span class="built_in">CGRectMake</span>(<span class="number">6</span>, <span class="number">2</span>, width + <span class="number">4</span>, <span class="number">20</span>);</span><br><span class="line">        <span class="keyword">self</span>.bounds = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, width + <span class="number">4</span> + <span class="number">10</span>, <span class="number">28</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(<span class="keyword">void</span>)tap&#123;</span><br><span class="line">    [<span class="keyword">self</span> setSelected:<span class="literal">YES</span> animated:<span class="literal">YES</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)drawRect:(<span class="built_in">CGRect</span>)rect &#123;</span><br><span class="line">    [<span class="keyword">self</span> drawInContext:<span class="built_in">UIGraphicsGetCurrentContext</span>()];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">self</span>.layer.shadowColor = [[<span class="built_in">UIColor</span> clearColor] <span class="built_in">CGColor</span>];</span><br><span class="line">    <span class="keyword">self</span>.layer.shadowOpacity = <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">self</span>.layer.shadowOffset = <span class="built_in">CGSizeMake</span>(<span class="number">0.0</span>f, <span class="number">0.0</span>f);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(<span class="keyword">void</span>)drawInContext:(<span class="built_in">CGContextRef</span>)context&#123;</span><br><span class="line"><span class="comment">//    CGContextSetRGBStrokeColor(context, 0, 255, 255, 0.99);</span></span><br><span class="line">    <span class="comment">//设置当前图形的宽度</span></span><br><span class="line">    <span class="built_in">CGContextSetLineWidth</span>(context, <span class="number">0.5</span>);</span><br><span class="line">    <span class="comment">//填充泡泡颜色并设置透明度</span></span><br><span class="line"></span><br><span class="line">    [<span class="keyword">self</span> getDrawPath:context];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">CGContextSetFillColorWithColor</span>(context, [<span class="built_in">UIColor</span> colorWithRed:<span class="number">40</span>/<span class="number">255.0</span> green:<span class="number">151</span>/<span class="number">255.0</span> blue:<span class="number">244</span>/<span class="number">255.0</span> alpha:<span class="number">1</span>].CGColor);</span><br><span class="line">    <span class="built_in">CGContextSetStrokeColorWithColor</span>(context , [<span class="built_in">UIColor</span> colorWithWhite:<span class="number">1</span> alpha:<span class="number">0.9</span>].CGColor);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">CGContextSetShadowWithColor</span>(context, <span class="built_in">CGSizeZero</span>, <span class="number">1</span>, [<span class="built_in">UIColor</span> lightGrayColor].CGColor);</span><br><span class="line"></span><br><span class="line"><span class="comment">//    //填充形状内的颜色</span></span><br><span class="line"><span class="comment">//    CGContextFillPath(context);</span></span><br><span class="line"><span class="comment">//    //填充线框</span></span><br><span class="line"><span class="comment">//    CGContextStrokePath(context);</span></span><br><span class="line">    <span class="comment">//决定是Stroking 还是Filling</span></span><br><span class="line">    <span class="built_in">CGContextDrawPath</span>(context, kCGPathEOFillStroke);</span><br><span class="line">&#125;</span><br><span class="line">-(<span class="keyword">void</span>)getDrawPath:(<span class="built_in">CGContextRef</span>)context&#123;</span><br><span class="line">    <span class="comment">//取出当前的图形大小</span></span><br><span class="line">    <span class="built_in">CGRect</span> rrect = <span class="keyword">self</span>.bounds;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%f"</span>, <span class="keyword">self</span>.frame.size.width);</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%f"</span>, <span class="keyword">self</span>.frame.size.height);</span><br><span class="line">    <span class="built_in">CGFloat</span> kArrorHeight = <span class="number">4</span>;</span><br><span class="line">    <span class="comment">//设置园弧度</span></span><br><span class="line">    <span class="built_in">CGFloat</span> radius = <span class="number">10.0</span>;</span><br><span class="line">    rrect = <span class="built_in">CGRectInsetEdges</span>(rrect, <span class="built_in">UIEdgeInsetsMake</span>(<span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">    <span class="built_in">CGFloat</span> minx = <span class="built_in">CGRectGetMinX</span>(rrect),<span class="comment">//0</span></span><br><span class="line">    <span class="comment">//中点</span></span><br><span class="line">    midx = <span class="built_in">CGRectGetMidX</span>(rrect),<span class="comment">//100</span></span><br><span class="line">    <span class="comment">//最大的宽度的X</span></span><br><span class="line">    maxx = <span class="built_in">CGRectGetMaxX</span>(rrect);<span class="comment">//200</span></span><br><span class="line">    <span class="built_in">CGFloat</span> miny = <span class="built_in">CGRectGetMinY</span>(rrect),<span class="comment">//0</span></span><br><span class="line">    <span class="comment">//最大的高度Y</span></span><br><span class="line">    maxy = <span class="built_in">CGRectGetMaxY</span>(rrect)-kArrorHeight;<span class="comment">//60</span></span><br><span class="line">    <span class="comment">//1.画向下的三角形</span></span><br><span class="line">    <span class="comment">//2.设置起点三角形的右边点为起点</span></span><br><span class="line">    <span class="built_in">CGContextMoveToPoint</span>(context, midx+kArrorHeight, maxy);</span><br><span class="line">    <span class="comment">//3.连线 右边点  －&gt;连最下面上下面的点</span></span><br><span class="line">    <span class="built_in">CGContextAddLineToPoint</span>(context, midx, maxy+kArrorHeight);<span class="comment">//画直线</span></span><br><span class="line">    <span class="comment">//4.最下面的点连上  最左边的点。</span></span><br><span class="line">    <span class="built_in">CGContextAddLineToPoint</span>(context, midx-kArrorHeight, maxy);</span><br><span class="line">    <span class="comment">//画4个圆弧</span></span><br><span class="line">    <span class="comment">//    CGContextAddArcToPoint(context, x1, y1, x2, y2, CGfloat radius );//画完后 current point不在minx,miny，而是在圆弧结束的地方</span></span><br><span class="line">    <span class="built_in">CGContextAddArcToPoint</span>(context, minx, maxy, minx, miny, radius);<span class="comment">//画完后 current point不在minx,miny，而是在圆弧结束的地方</span></span><br><span class="line">    <span class="built_in">CGContextAddArcToPoint</span>(context, minx, miny, maxx, miny, radius);</span><br><span class="line">    <span class="built_in">CGContextAddArcToPoint</span>(context, maxx, miny, maxx, maxy, radius);</span><br><span class="line">    <span class="built_in">CGContextAddArcToPoint</span>(context, maxx, maxy, midx, maxy, radius);</span><br><span class="line">    <span class="built_in">CGContextClosePath</span>(context);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>最终绘制的效果：<br><img src="http://ovn0zb2g7.bkt.clouddn.com/IMG_4E4016EC16D4-1.jpeg"><br><code>其他效果可适当修改代码</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mac下搭建SRS流媒体服务器</title>
      <link href="/2018/06/29/mac%E4%B8%8B%E6%90%AD%E5%BB%BASRS%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2018/06/29/mac%E4%B8%8B%E6%90%AD%E5%BB%BASRS%E6%B5%81%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>关于SRS的详细介绍，请看<a href="https://github.com/ossrs/srs" target="_blank" rel="noopener""><code>SRS官方地址</code></a></p><p>选择SRSv2.0版本   </p><p>  <code>1. clone 代码到本地</code><br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/ossrs/srs.git</span><br></pre></td></tr></table></figure></p><p>  <code>2.设置 配置文件configure.sh</code><br>    按照官网的说法，在mac平台下编译需要指定平台为<code>osx</code>，即</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">./configure --osx</span><br><span class="line">```  </span><br><span class="line">同时还可以附带禁用一些依赖库已提高编译成功率，比如</span><br><span class="line">```bash</span><br><span class="line"><span class="comment"># 指定Mac编译，并关闭其他option</span></span><br><span class="line">./configure --osx --without-ssl --without-hls --without-hds --without-dvr --without-nginx --without-http-callback --without-http-server --without-stream-caster --without-http-api --without-ffmpeg --without-transcode --without-ingest --without-stat --without-librtmp</span><br><span class="line">```   </span><br><span class="line">但实际运行中会报错</span><br><span class="line">&lt;img src=<span class="string">"http://ovn0zb2g7.bkt.clouddn.com/1__wanglijun_wanglijuns-MacBook-Pro____Documents_GitHub_srs_trunk.png"</span>&gt;  </span><br><span class="line"></span><br><span class="line">&lt;img src=<span class="string">"http://ovn0zb2g7.bkt.clouddn.com/1__wanglijun_wanglijuns-MacBook-Pro____Documents_GitHub_srs_trunk-2.png"</span>&gt;</span><br><span class="line"></span><br><span class="line">根据错误提示，发现是`DARWIN`模块的`i386`模拟器平台出错，由于不需要编译模拟器平台，只需想办法去掉`i386`平台的编译选项</span><br><span class="line"></span><br><span class="line">从工程的`trunk`文件夹下的`objs`文件夹下可以发现`st-1.9`文件夹下就是`DARWIN_18.0`的代码，从终端错误提示的最后一行也发现是编译`st-1.9`出错，从`congigure.sh`中发现所有模块的配置均在各自的`Makefile`文件中,找到`st-1.9`下`DARWIN_18.0`的`Makefile`文件，搜索`i386`，果然找到  </span><br><span class="line">```bash</span><br><span class="line">CFLAGS      += -arch i386 -arch x86_64</span><br><span class="line">LDFLAGS     += -arch i386 -arch x86_64</span><br></pre></td></tr></table></figure><p>删除这两个参数的 <code>-arch i386</code>,只保留mac平台的<code>-arch x86_64</code>,重新执行<code>./configure --osx</code><br>然而以上错误还在，发现<code>Makefile</code>中这两个参数又被还原了，不管怎么修改，只要重新执行配置<code>configure</code>都会被还原<br>在<code>auto</code>文件夹下的<code>depends.sh</code>中看到这样一段代码<br><img src="http://ovn0zb2g7.bkt.clouddn.com/depends_sh_%E2%80%94___Documents_GitHub_srs_trunk.png"><br>发现每次都是删除已有的文件夹，再从zip文件解压过来，所以每次修改都被还原<br>在<code>3rdparty</code>文件夹下找到<code>st-1.9.zip</code>，打开找到<code>Makefile</code>文件，修改其中那两个参数再保存回zip，重新执行<code>./configure --osx</code><br><code>配置成功！</code><br><img src="http://ovn0zb2g7.bkt.clouddn.com/Banners_and_Alerts_%E5%92%8C_1__make__clang__%E5%92%8C_depends_sh_%E2%80%94___Documents_GitHub_srs_trunk.png"><br>  <code>3.编译 make</code></p><p>  <code>编译成功后，更具网上说发先修改srs.sh 和 rtmp.sh 中的最大并发数 1000-&gt;250</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">开始: ./etc/init.d/srs start</span><br><span class="line">停止: ./etc/init.d/srs stop</span><br><span class="line">重启: ./etc/init.d/srs restart</span><br></pre></td></tr></table></figure><p>启动成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~/Documents/GitHub/srs/trunk(master*) » ./etc/init.d/srs start     wanglijun@wanglijuns-MacBook-Pro</span><br><span class="line">Starting SRS...                                            [  OK  ]</span><br><span class="line">SRS started(pid 33457)                                     [  OK  ]</span><br></pre></td></tr></table></figure><p><code>使用FFMPeg推流测试：（请提前安装ffmpeg,并准备一个本地视频文件）</code><br>cd 到视频文件所在目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -re -i python快速打造微信聊天机器人.mp4  -vcodec libx264  -f flv   rtmp://192.168.2.187:1935/live/room_wlj</span><br></pre></td></tr></table></figure><p>说明：<br><code>-vcodec libx264</code> 使用libx264编解码器转码<br><code>rtmp://192.168.2.187:1935/live/room_wlj</code> ip地址为本机ip地址，1935是SRS配置中指定监听的端口，后面地址名称随便写</p><p><code>在VLC播放器下播放视频流测试</code><br>打开VLC，选择网络，输入<code>rtmp://192.168.2.187:1935/live/room_wlj</code>，选择播放，一般刚开始会等待十秒左右的解码缓冲，开始播放：<br><img src="http://ovn0zb2g7.bkt.clouddn.com/Window_%E5%92%8C_rtmp___192_168_2_187_1935_live_room_wlj_%E5%92%8C_1__ffmpeg_-re_-i_python%E5%BF%AB%E9%80%9F%E6%89%93%E9%80%A0%E5%BE%AE%E4%BF%A1%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA_mp4_-vcodec__-f__ffmpeg_.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins自动化部署iOS项目</title>
      <link href="/2018/04/09/Jenkins%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2iOS%E9%A1%B9%E7%9B%AE/"/>
      <url>/2018/04/09/Jenkins%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2iOS%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>  &#8195;&#8195;最近折腾了下<code>Jenkins</code>的自动化部署，写了点总结经验。</br><br>  &#8195;&#8195;[<code>Jenkins</code>](<a href="https://jenkins.io&quot;" target="_blank" rel="noopener">https://jenkins.io&quot;</a> Jenkins”) 是一个开源软件项目，是基于<code>Java</code>开发的一种持续集成工具，用于监控持续重复的工作，旨在提供一个开放易用的软件平台，使软件的持续集成变成可能。</br><br><code>Jenkins</code>功能包括：</br><br><code>1、</code>持续的软件版本发布/测试项目。</br><br><code>2、</code>监控外部调用执行的工作。</br></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</br></h2><p>本文中，我们将用<code>Jenkins</code>安装在一台闲置的mac上（mac需要安装Xcode）,通过<code>远程登录</code>进行项目配置。通过远程点击一个URL<code>http://192.168.2.182:8080/job/SifangManager/buildWithParameters?token=remotebuild&amp;BUILD_SHORTVERSION_NUNBER=2.0.1&amp;BUILD_VERSION_NUNBER=2.0.1.3</code>即可对<code>iOS</code>项目进行自动化打包<code>ipa</code>并发布到<code>itunsConnect</code>,完成后会有邮件通知。</p><blockquote><p>关于mac远程登录：</br><br>  在<font color=red>要登录的远程电脑</font>上打开<code>系统偏好设置</code>-&gt;<code>共享</code>，勾选<code>远程登录</code>,可以看到提示如图，</p></blockquote><!-- ![mac远程登录设置](2018-04-09/Window.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_0.png"></br></br>确认自己的电脑和远程电脑在同一局域网下，在<font color=red>自己的电脑</font>上终端输入<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh 要登录的远程电脑用户名<span class="meta">@要登录的远程电脑IP</span></span><br></pre></td></tr></table></figure>根据提示输入远程电脑密码即可<font color=red>已下操作均在远程登录环境下操作</font><p><code>Jenkins</code>安装:</br><br>  可用过官网下载对应平台的安装包安装，或者下载通用的war包，这里我们用<code>homebrew</code>安装,如果电脑上没有装<code>homebrew</code>，<a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener" title="homebrew">请点此处</a></p><p>  终端输入安装命令：<br>  <figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span><span class="keyword">jenkins</span></span><br></pre></td></tr></table></figure><br>  安装成功后，输入<br>  <figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">jenkins</span></span><br></pre></td></tr></table></figure><br>  等待出现<code>Jenkins is fully up and running</code>字样即正常启动</br>,启动后不要关闭终端，否则会强制结束<code>Jenkins</code>,要重启、停止<code>Jenkins</code>，建议通过<code>Jenkins</code>API来操作，下面会说<br>  <!-- ![jenkins](2018-04-09/1__ssh_yahan_192_168_2_186__ssh_.png) --><br>  <img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_1.png"><br>  <figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注：jenkins默认占用电脑<span class="number">8080</span>端口，如果此端口已经被占用，启动jenkins会出现address has already used相关错误，那么请修改jenkins的端口号</span><br></pre></td></tr></table></figure><br>  启动成功后，打开浏览器，输入<br>  <figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">登录的远程电脑IP:<span class="number">8080</span></span><br></pre></td></tr></table></figure><br>  <font color=gray size=1>注：如果修改了jenkins端口号，请使用修改过的端口号替换8080</font></p><p>  第一次启动界面<br>  <!-- ![第一次启动界面](2018-04-09/Mac中jenkins的使用——自动构建.png) --><br>  <img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_2.png"><br>  如图中提示，用vi或者cat命令打开<code>/Users/远程电脑用户名/.jenkins/secrets/initinalAdminPassword</code>文件，使用其中的密码作初始化密码，点击Continue</p><p>  根据提示安装推荐的插件</br><br>  根据提示创建一个常用登录账户，以后都用创建的这个账户密码登录</p><p>  进入Jenkins首页：<br>  <!-- ![进入Jenkins首页](2018-04-09/Dashboard__Jenkins.png) --><br>  <img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_3.png"></p><p>  推荐使用<code>JenkinsAPI</code>重启、退出Jenkins服务(<code>登录的远程电脑IP:8080/API</code>)：</br><br>  <figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//退出</span></span><br><span class="line"><span class="symbol">http:</span><span class="comment">//192.168.2.182:8080/exit</span></span><br><span class="line"><span class="comment">//重启</span></span><br><span class="line"><span class="symbol">http:</span><span class="comment">//192.168.2.182:8080/restart</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//在载入的页面中点击确认按钮即可</span></span><br></pre></td></tr></table></figure><br>  <!-- ![在载入的页面中点击确认按钮即可](2018-04-09/Window_和_Method_Not_Allowed__Jenkins_-2.png) --><br>  <img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_4.png"></p><p>  第一次进入没有项目，选择新建任务，填入项目名称，选择自由风格项目，完成。</br><br>  项目配置页面：<br>  <!-- ![项目配置页面](2018-04-09/测试_Config__Jenkins_.png) --><br>  <img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_5.png"></p><p>  由于是进行iOS打包，有意在配置项目前，先需要下载一个插件，用于管理证书和描述文件。<br>  在<code>Jenkins</code>首页，进入<code>系统管理</code>-&gt;<code>管理插件</code>，<br>  选择<code>可选插件</code>,搜索<code>Keychains and Provisioning Profiles Management</code>,勾选后选择直接安装，安装完成后，进入<code>系统管理</code>页面，在下面选择<code>Keychains and Provisioning Profiles Management</code>选项，进入此插件设置页面<br>  <!-- ![Keychains and Provisioning Profiles Management](2018-04-09/管理Jenkins__Jenkins_.png) --><br>  <img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_6.png"><br>  </br></p>  <!-- ![Keychains and Provisioning Profiles Management2](2018-04-09/测试_Jenkins_.png) -->  <img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_7.png"><p>在上传钥匙串文件处，可以不用上传，但需要在远程电脑上安装证书和描述文件，最好用远程电脑的Xcode手动打包一次，确保证书正确。<br>在配置文件路径中输入</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/User/</span>远程电脑用户名<span class="regexp">/Library/</span>MobileDevice<span class="regexp">/Provisioning Profiles</span></span><br></pre></td></tr></table></figure><p>保存退出</p><p>配置邮箱服务器，用于发送构建结果通知邮件：<br>进入<code>系统管理</code>-&gt;<code>系统设置</code>,可以看到<code>Extended E-mail Notification</code>（扩展邮件通知）和<code>邮件通知</code>，我们将使用<code>Extended E-mail Notification</code>，它比jenkins自带的<code>邮件通知</code>具有跟多的功能。<br><font color=gray size=1>注：如果没有扩展邮件通知，可在插件中搜索Email，找到扩展邮件通知（Extended E-mail Notification）插件安装</font></p><p>这里将配置一个邮件发送服务，当构建成功或失败时，jenkins会已此处配置的邮件服务，以此处配置的邮箱账户发送给你设置的收件箱。<br>这里我用的是189邮箱来发送，用qq邮箱来接收。<br><font color=gray size=1>注：可以用同一个邮箱，既发也收，但最好准备两个邮箱账号，可以是相同的邮箱服务器，如果只用一个邮箱既作为发件箱又作为收件箱，那么对于部分邮箱服务器是发不出去的</font><br>SMTP服务器：填发件的邮箱SMTP服务器，比如189邮箱的是<code>smtp.189.cn</code>，如果不知道，可以进入对应的网页版邮箱，进入账号设置，找到IMAP/SMTP服务，选择开启。一般旁边都会有相关的配置说明。</p><p>以下是189邮箱的SMTP设置<br><font color=gray size=1><br>接收邮件服务器：imap.189.cn</br><br> 发送邮件服务器：smtp.189.cn</br><br> 账户名：您的189邮箱账户名</br><br> 密码：您的189邮箱密码</br><br> 电子邮件地址：您的189邮箱的完整邮件地址</br></p><p> 如何设置POP3服务的SSL加密方式？</br><br> 强烈建议勾选SSL加密方式，能够有效的防止账户被盗以及邮件被窃取等行为，</br><br> 使用SSL的通用配置如下：</br><br> 接收邮件服务器：pop.189.cn，使用SSL，端口号995</br><br> 发送邮件服务器：smtp.189.cn，使用SSL，端口号465或587</br><br> 账户名：您的189邮箱账户名</br><br> 密码：您的189邮箱密码</br><br> 电子邮件地址：您的189邮箱的完整邮件地址</font></p><p>默认后缀填<code>@189.cn</code>,勾选<code>使用SMTP身份验证</code>,用户名密码填入189邮箱<code>18055352658@189.cn</code>和邮箱密码。<br><font color=red size=1>特别注意：在系统设置的<code>Jenkins Location</code>中，将<code>系统管理员邮件地址</code>也设置成你的发件箱地址，这里我就填<code>18055352658@189.cn</code>，如果这两处不一致可能导致发不出去</br></font><br>勾选SSL,端口号根据上面189邮箱配置说明，我填入465。<br>默认收件人填你像设置的收件邮箱，这里我填我的QQ邮箱<code>850594374@qq.com</code>，注意到默认收件人旁边问问号提示里，说了这里填的在后面可以用<code>$DEFAULT_RECIPIENTS</code>获取到<br>在<code>Default Triggers</code>中，勾选你想要发送邮件的触发方式，默认是<code>Failure - Any</code>，任何构建失败都发送。<br>我们使用下面的<code>邮件通知</code>自带的邮件测试来看看能不能发送：<br>在<code>邮件通知</code>填入和上面相同的输入，在<code>高级</code>里也填一样的，勾选<code>通过发送测试邮件测试配置</code>,在下面填入你的收件箱，这里我填我的QQ邮箱。点击<code>Test Configuration</code>，发送测试邮件。查看收件箱应该能收到一封来自你的SMTP发件箱发来的测试邮箱。</p><!-- ![](2018-04-09/Configure_System__Jenkins_.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_8.png"><h2 id="下面进入正题，构建项目的配置："><a href="#下面进入正题，构建项目的配置：" class="headerlink" title="下面进入正题，构建项目的配置："></a>下面进入正题，构建项目的配置：</h2><p>在项目构建配置页面，有几大模块：</br><br><code>General</code>：项目基本设置</br><br><code>源码管理</code>：项目源代码管理,Git/SVN等配置</br><br><code>构建触发器</code>：触发构建的设置，比如我在提交代码后自动开始构建、按计划时间构建、通过远程url触发构建等，这块可以在最后设置</br><br><code>构建环境</code>：项目构建环境设置，由于我是使用脚本打包，并且已经在远程电脑上配置好了证书和描述文件，这块不需要任何设置</br><br><code>构建</code>：项目构建的具体步骤，可以通过相关插件添加步骤或者shell脚本</br><br><code>源码管理</code>：项目源代码管理</br><br><code>构建后操作</code>：构建完成后需要的后续操作，比如上传到蒲公英等内测平台</p><p>由于公司使用SVN管理代码，并且SVN下有多项目多分支，所以用参<code>数化构建</code>来使配置更加灵活</br><br><font color=gray size=1><code>数化构建</code>是指在构建开始前，设置一些参数作为变量，在后面的构建中，通过<code>$参数名</code>或者<code>${参数名}</code>的形式来获取参数的值，这是shell中获取变量的值的语法，由于本文使用脚本打包，后面会介绍<code>shell</code>的几个常用命令</font></br></br></p><p>在<code>参数化构建</code>之前,我们需要设置项目的存放位置，由于Jenkins默认的位置是在    <code>/Users/用户名/.jenkins</code>下，由于是隐藏目录，后面执行脚本会有诸多问题，这里我们将项目的存放目录改为<code>/Users/用户名/Documents/jenkins/workSpace</code>下，在<code>General</code>中，选择<code>高级</code>，勾选<code>使用自定义的工作空间</code>，在目录中填入<code>/Users/用户名/Documents/jenkins/workSpace</code>，显示名称可不填，应用保存。<br><font color=gray size=1>注：这里设置的<code>使用自定义的工作空间</code>仅对当前项目有效</font></br></br></p><p>回到<code>参数化构建</code>，首先勾选<code>参数化构建</code>，选择<code>添加参数</code></p><blockquote></blockquote><!-- ![](2018-04-09/测试_Config__Jenkins_-2.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_9.png">`Credentials Parameter`：凭证参数，在构建中用`$参数名`获取的将是凭证的ID，具体怎么用尚不清楚😥</br>`List Subversion tags(and more)`：SVN分支/tag列表，对于SVN多分枝或者多Tag的，可以使用此参数手动选择想要构建的分支。</br>`字符参数`：一段简短的字符/文本值</br>`文本参数`：文本值，对于简短的文本，也可以使用`字符参数`</br>`密码参数`：显示为*代替的密码形式的文本参数，取值时取的直接是文本值</br>`运行时参数`：感觉没什么用，也不知道有什么用😥</br>`选项参数`：根据设置的选项进行单选，设置选项：选项间需要换行，第一行为默认选中`布尔值参数`：可以提供Bool选择,取值时取的将是'true'/'false'字符</br><p><font color=gray size=1>注：我的SVN项目目录结构如图，这里填的请根据你的实际情况</p><!-- ![](2018-04-09/wanglijun.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_10.png"></font></br></br><p>首先添加<code>List Subversion tags(and more)</code>参数，名称填入<code>SVN_BRANCHES</code>,Url填入SVN地址（到当前项目地址），<code>Credentials</code>中添加凭证，填SVN账号密码，add后回来选择刚刚的凭证。<code>Default value</code>中填入<code>trunk</code>,这样Jenkins在检出时会创建 <code>Url最后一个路径/Default value</code>结构的目录</p><!-- ![](2018-04-09/测试_Config__Jenkins_-3.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_11.png"><p>由于项目有多target，所以添加一个选项参数来选择target对应的Scheme,名称:<code>SCHEME_NAME</code>,选项填写形式如下</p><!-- ![](2018-04-09/测试_Config__Jenkins_的_4.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_12.png"><p>添加两个 版本号 <code>字符参数</code>，用于设定打包版本号<code>BUILD_SHORTVERSION_NUNBER</code>:打包的版本(version)号，例如2.2.0</br><br><code>BUILD_VERSION_NUNBER</code>:打包的构建(build)号，例如2.2.0.1</br></p><!-- ![](2018-04-09/测试_Config__Jenkins_-4.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_13.png"></br><p>添加<code>字符参数</code> 项目的SVN根目录（相对于jenkins的workSpace路径）<code>SVN_LOCAL_PATH</code>，由于在后面的脚本中，jenkins只提供项目workSpace路径路径的参数，所以这里添加一个参数作为项目路径，并且是相对于jenkins的workSpace路径。默认值<code>SVNUrl最后一个路径/${SVN_BRANCHES}</code>，<code>${SVN_BRANCHES}</code>是前面设置的分支</br></br></p><p>添加 <code>字符参数</code> <code>WORKSPACEPATH</code>,用于标识xcode项目的workSpace文件所在的目录(相对于jenkins的workSpace路径），默认值<code>${SVN_LOCAL_PATH}/装xcode项目的workSpace文件的文件夹</code>，也即Xcode项目的根目录文件夹</br></br></p><p>添加<code>布尔参数</code> <code>NEED_POD_INSTALL</code>用于标识是否需要<code>pod Install</code>,默认<code>false</code> <code>false</code>:将检测如果项目下有Pods文件夹则不进行<code>pod Install</code>，如果没有，依然会<code>pod Install</code>; <code>true</code>:强制执行<code>pod Install</code>(这个逻辑是在后面的脚本中写的)</br></br></p><p>添加<code>布尔参数</code> <code>NEED_CARTHAGE_UPDATE</code>用于标识是否需要<code>carthage update</code>,默认<code>false</code> <code>false</code>:将检测如果项目下有<code>Carthage</code>文件夹则不进行<code>carthage update</code>，如果没有，依然会<code>carthage update</code>;<code>true</code>:强制执行<code>carthage update</code>(这个逻辑是在后面的脚本中写的)</br></p><p>添加<code>字符参数</code> <code>DEFAULT_RECIPIENTS</code>用于临时设置收件人邮箱。默认值填入收件人邮箱</br></br></p><p>添加<code>字符参数</code> <code>ITUNNES_ACCOUNT</code>用于设置开发者账号，默认值填入开发者账号</br></br></p><p>添加<code>密码参数</code> <code>ITUNNES_ACCOUNT_PASSWORD</code> 用于设置开发者账号密码。</br><br><font color=red size=1>注意：如果开启了双重验证，需要到<a href="https://appleid.apple.com/account/manage" target="_blank" rel="noopener" title="apple官网">apple官网</a>设置双重验证的独立密码,然后将独立密码填入<br></br></font></p><p>添加<code>文件参数</code>,用于导出ipa包时，<code>-exportOptionsPlist</code>需要此文件<code>文件路径</code>填入<code>archive/ExportOptions_dis_AppStore.plist</code>,这里路径相对于Jenkins的workSpace目录。 </br><br><font color=gray size=1><br>这个文件打包ipa是必须要的，这里的文件参数是用来将自己电脑上的这个文件传到远程电脑,如果远程电脑对应的路径下已经存在这个文件，就不必传了，所以只需第一次传一下，或者通过别的方式直接弄过去。</br><br>这个文件里面是一些开发者账号信息，对于同一个账号的打包，经测试可以共用这一个。</br><br>这个文件的怎么拿到？</br><br>用Xcode手动导出ipa,在导出的文件夹里，除了ipa文件外，还要一个ExportOptions的.plist文件，就是这个文件。</br><br>也可以根据我的文件模板自己写一个:</br></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">plist</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Apple//DTD PLIST 1.0//EN"</span> <span class="meta-string">"http://www.apple.com/DTDs/PropertyList-1.0.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>method<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>app-store<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>signingStyle<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>automatic<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>stripSwiftSymbols<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>teamID<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>你的TeamID<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>uploadSymbols<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure></font></br>`参数化构建`设置完了，对于所有的参数，建议都设置默认值，以便于远程构建时直接使用默认值，有些参数一旦设置默认值可以不用再改，有些项目比较简单的可以根据实际情况，不用上面的一些参数，而直接在脚本里写死。</br><p>下面设置<code>源码管理</code></br><br>这里选择<code>Subversion</code>,URL填入<code>svn://wanglj@192.168.2.24//..项目路径/$SVN_BRANCHES</code>，<code>$SVN_BRANCHES</code>是上面的参数选择的分支，所以实际的SVN检出的项目是所选的分支。<br>选择SVN凭证，<code>Local module directory</code>填入SVN检出的路径（相对于jenkins的workSpace路径）。我填入<code>SVNUrl最后一个路径/${SVN_BRANCHES}</code>, <code>Repository depth</code>选择<code>infinity</code>无穷。应用保存。</br><br>现在可以进行第一步测试了，回到项目首页，会有一个<code>Build with Parameters</code>选项，点击进入参数选择页面</p><!-- ![](2018-04-09/思方经理人Jenkins__Jenkins__和_2018-04-09_md_—___wljblog_source__posts.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_21.png"></br></br><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_14.png"><!-- ![](2018-04-09/Jenkins-2.png) --></br>如果上面的都正常，特别是SVN的分支可以选择的话（SVN这个要特别注意路径对不对，填入选项的直接填实际文本，不要经过unIcode或者其他编码），那就开始下一步，写构建脚本。</br></br>在`构建`中，添加构建步骤，选`Execute shell`在弹出的脚本框里输入shell代码</br>> `bash`脚本常用命令/语法</br>`${参数名}`：取参数值</br>`$(命令)`：通过执行命令来取值值</br>`$(sed -n '1p' 文件)`：读取文件第一行内容</br>`echo 字符串`：打印字符串</br>`echo 字符串 >>文件`：追加输出到文件中</br>`-d "文件夹路径/"`：判断文件夹是否存在</br>`-e "文件路径"`：判断文件是否存在</br>`-f "文件路径"`：判断文件是否存在并且是一般文件(regular file)(不是目录或者设备文件)</br>`-z 字符串`：判断字符串长度为0</br>`A =~ B`：判断字符串A是否包含B</br>`A != B`：字符串A不等于B</br>`rm -f 文件`：删除文件</br>`mkdir 文件夹路径`：新建文件夹（上级目录必须已经存在，否则无法创建）</br>`mkdir -p 文件夹路径`：新建文件夹（上级目录如果不存在，会连续创建不存在的目录）</br>`curl 远程文件`：下载文件</br>`curl 远程文件 -o 本地路径`：下载文件保存到指定路径</br>`|`：管道，将前一个命令的输出作为后一个命令的输入</br>`\`：命令换行连接，显示为换行，但链接为一个命令。`\`前需要空格，不要紧贴前面的命令</br>`:<< 注释 !`：块注释</br>`#注释`：单行注释</br>`exit 状态码`：结束当前脚本，相当于其他语言的return，shell默认0为成功，非0为失败<font color=gray size=1>注：当命令中有字符串包含空格时，shell会默认截断，将其识别为两个命令导致出错，因此要用`""`抱住含有空格的参数，有时还需要在空格前用`\`来转义空格</font></br></br><p>这里我用了三个脚本：</br><br>第一个脚本用来判断参数化时的版本号或者远程打包命令的版本号是否符合一般要求。</br><br><font color=gray size=1>由于远程命令是没有参数化构建时的手动修改参数的，所以是默认使用参数化构建配置的默认值。远程命令后面的参数可以对参数化构建的参数进行重新设置。</font></br></br><br>第二个脚本判断是否需要执行<code>Pod install</code>和是否需要执行<code>carthage update</code></br><br>第三个脚本进行<code>Archive</code>、<code>export IPA</code>、<code>commit To itunsConnect</code>操作</p><p>先贴出三个脚本的完整代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#shell_1</span></span><br><span class="line">BuildError_FILE_PATH=<span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/build/BuildError.txt"</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">"<span class="variable">$&#123;BuildError_FILE_PATH&#125;</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"存在上次的BuildError.txt：删除"</span></span><br><span class="line">rm -f <span class="variable">$&#123;BuildError_FILE_PATH&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$BUILD_VERSION_NUNBER</span> ]] || [[ -z <span class="variable">$BUILD_SHORTVERSION_NUNBER</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"未设置BUILD_VERSION_NUNBER、BUILD_SHORTVERSION_NUNBER，将使用项目中的版本号打包"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#InfoPlist文件路径</span></span><br><span class="line">    INFOPLIST_FILE_PATH=<span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/<span class="variable">$&#123;WORKSPACEPATH&#125;</span>/SF-Manger/Supporting Files/Info.plist"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#BUILD_SHORTVERSION_NUNBER=2.2.5</span></span><br><span class="line">    <span class="comment">#BUILD_VERSION_NUNBER=2.2.5.3</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#版本修改日志</span></span><br><span class="line">    LOG_Build=<span class="string">"打包Build号=<span class="variable">$&#123;BUILD_VERSION_NUNBER&#125;</span>"</span></span><br><span class="line">    LOG_Version=<span class="string">"打包Version号=<span class="variable">$&#123;BUILD_SHORTVERSION_NUNBER&#125;</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;LOG_Build&#125;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;LOG_Version&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#判断BUILD_VERSION_NUNBER是否包含BUILD_SHORTVERSION_NUNBER</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$BUILD_VERSION_NUNBER</span> =~ <span class="variable">$BUILD_SHORTVERSION_NUNBER</span> ]] &amp;&amp; [ <span class="string">"<span class="variable">$&#123;BUILD_VERSION_NUNBER&#125;</span>"</span> != <span class="string">"<span class="variable">$&#123;BUILD_SHORTVERSION_NUNBER&#125;</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"版本号校验正常"</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"版本号校验异常"</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/build/"</span> ];<span class="keyword">then</span></span><br><span class="line">        mkdir <span class="variable">$&#123;WORKSPACE&#125;</span>/build</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/build/文件夹已经存在"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">echo</span> 199 &gt;&gt; <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/build/BuildError.txt"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"版本号校验异常，请检查版本号:<span class="variable">$&#123;LOG_Build&#125;</span> <span class="variable">$&#123;LOG_Version&#125;</span>"</span> &gt;&gt; <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/build/BuildError.txt"</span></span><br><span class="line">        <span class="built_in">exit</span> 199</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$&#123;SVN_LOCAL_PATH&#125;</span></span><br><span class="line">    <span class="comment">#更新最新的SVN上的Info.plist</span></span><br><span class="line">    svn update <span class="string">"<span class="variable">$&#123;INFOPLIST_FILE_PATH&#125;</span>"</span> \</span><br><span class="line">    <span class="comment">#--username $&#123;SVN_CREDENTIALS_NAME&#125; \</span></span><br><span class="line">    <span class="comment">#--password $&#123;SVN_CREDENTIALS_PASSWORD&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#修改版本号</span></span><br><span class="line">    /usr/libexec/PlistBuddy -c <span class="string">"Set :CFBundleVersion <span class="variable">$&#123;BUILD_VERSION_NUNBER&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;INFOPLIST_FILE_PATH&#125;</span>"</span></span><br><span class="line">    /usr/libexec/PlistBuddy -c <span class="string">"Set :CFBundleShortVersionString <span class="variable">$&#123;BUILD_SHORTVERSION_NUNBER&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;INFOPLIST_FILE_PATH&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#svn resolved $&#123;INFOPLIST_FILE_PATH&#125;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"jenkins提交，修改Build&amp;Version：<span class="variable">$&#123;LOG_Build&#125;</span> <span class="variable">$&#123;LOG_Version&#125;</span>"</span></span><br><span class="line">    svn commit -m <span class="string">"jenkins提交，修改Build&amp;Version：<span class="variable">$&#123;LOG_Build&#125;</span> <span class="variable">$&#123;LOG_Version&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;INFOPLIST_FILE_PATH&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#shell_2</span></span><br><span class="line"><span class="comment">#检查是否有之前的shell出现异常，如果有，则停止直接退出</span></span><br><span class="line">BuildError_FILE_PATH=<span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/build/BuildError.txt"</span></span><br><span class="line">ERRORCODE=$(sed -n <span class="string">'1p'</span> <span class="variable">$&#123;BuildError_FILE_PATH&#125;</span>)</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$&#123;BuildError_FILE_PATH&#125;</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"存在BuildError.txt"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"ERRORCODE:<span class="variable">$&#123;ERRORCODE&#125;</span>"</span></span><br><span class="line">    <span class="comment">#字符串不为空.就是长度不为0.</span></span><br><span class="line">    <span class="keyword">if</span> [ ! -z <span class="string">"<span class="variable">$ERRORCODE</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"读取BuildError.txt，ERRORCODE不为空"</span></span><br><span class="line">        <span class="comment">#判断字符串是否相等</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$ERRORCODE</span>"</span> != <span class="string">"0"</span> ];<span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"读取BuildError.txt，ERRORCODE不为0,构建失败，停止后续的构建"</span></span><br><span class="line">            <span class="built_in">exit</span> 198</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"未检测到BuildError，继续构建"</span></span><br><span class="line">rm -f <span class="variable">$&#123;BuildError_FILE_PATH&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/<span class="variable">$&#123;WORKSPACEPATH&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;NEED_POD_INSTALL&#125;</span> == <span class="literal">true</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"参数构建设置pod install == true,开始 pod install"</span></span><br><span class="line">pod install --verbose</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/<span class="variable">$&#123;WORKSPACEPATH&#125;</span>/Pods/"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"参数构建设置pod install == false,但Pods/文件夹不存在,开始 pod install"</span></span><br><span class="line">  pod install --verbose</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Pods/文件夹已经存在,跳过 pod install"</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;NEED_CARTHAGE_UPDATE&#125;</span> == <span class="literal">true</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"参数构建设置carthage update == true,开始 carthage update"</span></span><br><span class="line">carthage update --verbose</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/<span class="variable">$&#123;WORKSPACEPATH&#125;</span>/Carthage/"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"参数构建设置carthage update == false,但Carthage/文件夹不存在,开始 carthage update"</span></span><br><span class="line">  carthage update --verbose</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Carthage/文件夹已经存在，跳过 carthage update"</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#shell_3</span></span><br><span class="line"><span class="comment">#检查是否有之前的shell出现异常，如果有，则停止直接退出</span></span><br><span class="line">BuildError_FILE_PATH=<span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/build/BuildError.txt"</span></span><br><span class="line"><span class="comment">#读取BuildError.txt第一行</span></span><br><span class="line">ERRORCODE=$(sed -n <span class="string">'1p'</span> <span class="variable">$&#123;BuildError_FILE_PATH&#125;</span>)</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$&#123;BuildError_FILE_PATH&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"存在BuildError.txt"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"ERRORCODE:<span class="variable">$&#123;ERRORCODE&#125;</span>"</span></span><br><span class="line">    <span class="comment">#字符串不为空.就是长度不为0.</span></span><br><span class="line">    <span class="keyword">if</span> [ ! -z <span class="string">"<span class="variable">$ERRORCODE</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"读取BuildError.txt，ERRORCODE不为空"</span></span><br><span class="line">        <span class="comment">#判断字符串是否相等</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$ERRORCODE</span>"</span> != <span class="string">"0"</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"读取BuildError.txt，ERRORCODE不为0,构建失败，停止后续的构建"</span></span><br><span class="line">            <span class="built_in">exit</span> 198</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"未检测到BuildError，继续构建"</span></span><br><span class="line">rm -f <span class="variable">$&#123;BuildError_FILE_PATH&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WORKSPACEFILENAME=<span class="variable">$SCHEME_NAME</span></span><br><span class="line">IPA_FILENAME=<span class="variable">$SCHEME_NAME</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Archive the application</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;WORKSPACEPATH&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ArchivePath=<span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/archive/<span class="variable">$&#123;SCHEME_NAME&#125;</span>/<span class="variable">$&#123;BUILD_SHORTVERSION_NUNBER&#125;</span>/<span class="variable">$&#123;BUILD_VERSION_NUNBER&#125;</span>/<span class="variable">$&#123;SCHEME_NAME&#125;</span>.xcarchive"</span></span><br><span class="line"><span class="comment">#如果已经存在build号对应的.xcarchive，就不再archive</span></span><br><span class="line">:&lt;&lt;!</span><br><span class="line">-e filename 如果 filename存在，则为真</span><br><span class="line">-d filename 如果 filename为目录，则为真</span><br><span class="line">-f filename 如果 filename为常规文件，则为真</span><br><span class="line">!</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"==&gt;ArchivePath=<span class="variable">$&#123;ArchivePath&#125;</span>"</span></span><br><span class="line"><span class="keyword">if</span> [ -e <span class="variable">$&#123;ArchivePath&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"已存在<span class="variable">$&#123;SCHEME_NAME&#125;</span>.xcarchive，跳过xcarchive"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"未检测到<span class="variable">$&#123;SCHEME_NAME&#125;</span>.xcarchive，开始xcarchive"</span></span><br><span class="line"></span><br><span class="line">    ArchiveDirectoryPath=<span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/archive/<span class="variable">$&#123;SCHEME_NAME&#125;</span>/<span class="variable">$&#123;BUILD_SHORTVERSION_NUNBER&#125;</span>/<span class="variable">$&#123;BUILD_VERSION_NUNBER&#125;</span>"</span></span><br><span class="line">    <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$&#123;ArchiveDirectoryPath&#125;</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    mkdir -p <span class="variable">$&#123;ArchiveDirectoryPath&#125;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;ArchiveDirectoryPath&#125;</span> 文件夹已经存在"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解锁对login.keychain的访问，codesign会用到,『这里直接使用远程电脑的keyChain,所以用远程电脑的密码』</span></span><br><span class="line">    security unlock-keychain -p <span class="string">"123456"</span> ~/Library/Keychains/login.keychain</span><br><span class="line">    <span class="comment"># 清除</span></span><br><span class="line">    xcodebuild clean</span><br><span class="line"></span><br><span class="line">    xcodebuild archive \</span><br><span class="line">    -workspace <span class="variable">$&#123;WORKSPACEFILENAME&#125;</span>.xcworkspace \</span><br><span class="line">    -scheme <span class="string">"<span class="variable">$&#123;SCHEME_NAME&#125;</span>"</span> \</span><br><span class="line">    -archivePath <span class="variable">$&#123;ArchivePath&#125;</span> \</span><br><span class="line">    -configuration Release</span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">IPA_FILEPATH=<span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/archive/<span class="variable">$&#123;SCHEME_NAME&#125;</span>/<span class="variable">$&#123;BUILD_SHORTVERSION_NUNBER&#125;</span>/<span class="variable">$&#123;BUILD_VERSION_NUNBER&#125;</span>/<span class="variable">$&#123;IPA_FILENAME&#125;</span>.ipa"</span></span><br><span class="line"><span class="comment">#如果已经存在build号对应的.ipa，就不再exportArchive</span></span><br><span class="line"><span class="keyword">if</span> [ -e <span class="variable">$&#123;IPA_FILEPATH&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"已存在<span class="variable">$&#123;SCHEME_NAME&#125;</span>.ipa，跳过exportArchive"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"未检测到<span class="variable">$&#123;SCHEME_NAME&#125;</span>.ipa，开始exportArchive"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 导出ipa</span></span><br><span class="line">  xcodebuild \</span><br><span class="line">  -exportArchive \</span><br><span class="line">  -archivePath <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/archive/<span class="variable">$&#123;SCHEME_NAME&#125;</span>/<span class="variable">$&#123;BUILD_SHORTVERSION_NUNBER&#125;</span>/<span class="variable">$&#123;BUILD_VERSION_NUNBER&#125;</span>/<span class="variable">$&#123;SCHEME_NAME&#125;</span>.xcarchive"</span> \</span><br><span class="line">  -exportOptionsPlist <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/archive/ExportOptions_dis_AppStore.plist"</span> \</span><br><span class="line">  -exportPath <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/archive/<span class="variable">$&#123;SCHEME_NAME&#125;</span>/<span class="variable">$&#123;BUILD_SHORTVERSION_NUNBER&#125;</span>/<span class="variable">$&#123;BUILD_VERSION_NUNBER&#125;</span>"</span> \</span><br><span class="line">  -quiet</span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#upload To itunsConnect</span></span><br><span class="line">ALTOOLPATH=/Applications/Xcode.app/Contents/Applications/Application\ Loader.app/Contents/Frameworks/ITunesSoftwareService.framework/Versions/A/Support/altool</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#验证APP</span></span><br><span class="line"><span class="string">"<span class="variable">$&#123;ALTOOLPATH&#125;</span>"</span> --validate-app \</span><br><span class="line">-f <span class="variable">$&#123;IPA_FILEPATH&#125;</span> \</span><br><span class="line">-u <span class="variable">$&#123;ITUNNES_ACCOUNT&#125;</span> \</span><br><span class="line">-p <span class="variable">$&#123;ITUNNES_ACCOUNT_PASSWORD&#125;</span> \</span><br><span class="line">--output-format xml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#上传APP</span></span><br><span class="line"><span class="string">"<span class="variable">$&#123;ALTOOLPATH&#125;</span>"</span> --upload-app \</span><br><span class="line">-f <span class="variable">$&#123;IPA_FILEPATH&#125;</span> \</span><br><span class="line">-u <span class="variable">$&#123;ITUNNES_ACCOUNT&#125;</span> \</span><br><span class="line">-p <span class="variable">$&#123;ITUNNES_ACCOUNT_PASSWORD&#125;</span> \</span><br><span class="line">--output-format xml</span><br></pre></td></tr></table></figure><p>由于jenkins的脚本构建，对于多个脚本，如果前面的失败了后面的脚本依然会进行，为了将一些明显的错误出现后不再执行后续操作（打包一次的时间太长了），对于版本号不符合一般要求的，我将错误信息保存在<code>${WORKSPACE}/build/BuildError.txt</code>中，先检查BuildError.txt如果有错误则直接退出。</br><br><code>/usr/libexec/PlistBuddy</code>：专门处理Plist的工具，修改版本号是通过直接修改项目的info.plist文件的<code>CFBundleVersion</code>和<code>CFBundleShortVersionString</code>值实现的，注意修改前先拉取为SVN版本，修改后要提交SVN</br><br>由于打包上传等命令比较固定，不再说明。具体可参考<a href="https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/man1/xcodebuild.1.html" target="_blank" rel="noopener">官方文档</a>或者这篇文章<a href="https://www.jianshu.com/p/4f4d16326152" target="_blank" rel="noopener">xcodebuild命令官方说明</a></br></p><p>至此，打包上传已经全部配置完成。下面来设置<code>构建后操作</code>来接收工作结果邮件通知。选择添加构建后操作，选择<code>Editable Email Notification</code>,在<code>Project Recipient List</code>接收人列表中，填入<code>$DEFAULT_RECIPIENTS</code>,即参数化构建时的输入的收件人。在<code>Attachments</code>附件中，我填入<code>build/BuildError.txt</code>,即脚本收集的错误信息，路径是相对于jenkins的workSpace路径。<code>Attach Build Log</code>选择<code>Attach Build Log</code>，让邮件带上jenkins收集的log.在<code>高级</code>中，添加<code>Failure-Any</code>和<code>Always</code>两个触发，都设置为<code>send to</code>:<code>Developers</code>和<code>Recipient List</code>。应用保存。</p><p>至此已经完整的配置了构建全过程，可以开始了！<br>选择参数化构建，即可开始了.开始后，可以看到有正在进行的任务</p><!-- ![](2018-04-09/思方经理人Jenkins__Jenkins__和_2018-04-09.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_20.png"></br></br></br>点击任务编号进入此次构建详情，点击`控制台输出`，看看控制台日志</br><!-- ![](2018-04-09/思方经理人Jenkins__25__Jenkins_.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_15.png"></br><!-- ![](2018-04-09/思方经理人Jenkins__30_Console__Jenkins_.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_16.png"></br></br><p>等待任务完成，即可收到邮件。</br></p><!-- ![](2018-04-09/189邮箱-爱简单.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_17.png">打开iTunsConnect，由于过了一段时间进去的，发现已经处理好了</br><!-- ![](2018-04-09/iTunes_Connect.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_18.png"><p>也可以在SVN中看到脚本的修改版本号提交记录</p><!-- ![](2018-04-09/Cornerstone.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_19.png">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>快速添加输入框下拉显示关联搜索关键词</title>
      <link href="/2018/01/11/iOS%20%E5%BF%AB%E9%80%9F%E6%B7%BB%E5%8A%A0%E8%BE%93%E5%85%A5%E6%A1%86%E4%B8%8B%E6%8B%89%E6%98%BE%E7%A4%BA%E5%85%B3%E8%81%94%E6%90%9C%E7%B4%A2%E5%85%B3%E9%94%AE%E8%AF%8D/"/>
      <url>/2018/01/11/iOS%20%E5%BF%AB%E9%80%9F%E6%B7%BB%E5%8A%A0%E8%BE%93%E5%85%A5%E6%A1%86%E4%B8%8B%E6%8B%89%E6%98%BE%E7%A4%BA%E5%85%B3%E8%81%94%E6%90%9C%E7%B4%A2%E5%85%B3%E9%94%AE%E8%AF%8D/</url>
      
        <content type="html"><![CDATA[<p><code>快速添加输入框下拉显示关联搜索关键词</code></p><h2 id="GIF-animation"><a href="#GIF-animation" class="headerlink" title="GIF animation"></a>GIF animation</h2><p><a href="http://ovn0zb2g7.bkt.clouddn.com/WLJSearchTableViewVideo.mov" target="_blank" rel="noopener"><img src="http://ovn0zb2g7.bkt.clouddn.com/WLJSearchTableView1.gif" alt="WLJSearchTableView"></a></p><h2 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h2><p><a href="http://ovn0zb2g7.bkt.clouddn.com/WLJSearchTableViewVideo.mov" target="_blank"><img src="http://ovn0zb2g7.bkt.clouddn.com/Simulator%20Screen%20Shot%20-%20iPhone%206s%20Plus%20-%202018-01-11%20at%2015.57.49.png"alt="WLJSearchTableView Demo Video" width="320" height="480" border="10" /></a></p><h1 id="GetStart"><a href="#GetStart" class="headerlink" title="GetStart"></a>GetStart</h1><h4 id="1-导入WLJSearchTableview文件夹进工程"><a href="#1-导入WLJSearchTableview文件夹进工程" class="headerlink" title="1.导入WLJSearchTableview文件夹进工程"></a>1.导入WLJSearchTableview文件夹进工程</h4><h4 id="2-导入-import-“UITextField-WLJSearchTableview-h”"><a href="#2-导入-import-“UITextField-WLJSearchTableview-h”" class="headerlink" title="2.导入#import “UITextField+WLJSearchTableview.h”"></a>2.导入#import “UITextField+WLJSearchTableview.h”</h4><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">__<span class="keyword">weak</span> <span class="keyword">typeof</span>(<span class="keyword">self</span>) weakSelf = <span class="keyword">self</span>;</span><br><span class="line">WLJSearchTableviewConfig * searchTableviewConfig  = [[WLJSearchTableviewConfig alloc]init];</span><br><span class="line"><span class="comment">//searchTableviewConfig.searchTime = SearchTimeWhileDidEndEditing;//输入结束时开始搜索</span></span><br><span class="line">searchTableviewConfig.searchTime = SearchTimeWhileDidChange;<span class="comment">//输入变化时开始搜索</span></span><br><span class="line">searchTableviewConfig.searchTableViewCellEstablishHeight = <span class="number">30</span>;<span class="comment">//行高</span></span><br><span class="line">searchTableviewConfig.maxShowNum = <span class="number">3</span>;<span class="comment">//最大显示行数</span></span><br><span class="line"><span class="comment">//调用搜索接口，并返回搜索结果</span></span><br><span class="line">searchTableviewConfig.searchKeywordsFunc = ^(<span class="built_in">NSString</span> *keyWords, SearchCompleteblock searchCompleteblock) &#123;</span><br><span class="line">  [weakSelf searchWithKeyWords:keyWords complete:searchCompleteblock];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//设置cell显示</span></span><br><span class="line">searchTableviewConfig.cellForRowAtIndexPath = ^(<span class="built_in">UITableViewCell</span> *cell, <span class="built_in">NSIndexPath</span> *indexPath,<span class="keyword">id</span> data) &#123;</span><br><span class="line">  <span class="built_in">NSDictionary</span> * currentData = (<span class="built_in">NSDictionary</span> *) data;</span><br><span class="line">  cell.textLabel.text = currentData[<span class="string">@"name"</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//点击了搜索结果</span></span><br><span class="line">searchTableviewConfig.didSeletedRowAtIndexPath = ^(<span class="built_in">NSIndexPath</span> *indexPath, <span class="keyword">id</span> data) &#123;</span><br><span class="line">  <span class="built_in">NSDictionary</span> * currentData = (<span class="built_in">NSDictionary</span> *) data;</span><br><span class="line">  <span class="comment">//do your code ... eg.:</span></span><br><span class="line">  <span class="built_in">UIAlertController</span> * alert =  [<span class="built_in">UIAlertController</span> alertControllerWithTitle:<span class="literal">nil</span> message:[<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"点击 了%@"</span>,currentData[<span class="string">@"name"</span>]] preferredStyle:<span class="built_in">UIAlertControllerStyleAlert</span>];</span><br><span class="line">  [alert addAction:[<span class="built_in">UIAlertAction</span> actionWithTitle:<span class="string">@"返回"</span> style:<span class="built_in">UIAlertActionStyleCancel</span> handler:<span class="literal">nil</span>]];</span><br><span class="line">  [weakSelf presentViewController:alert animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">&#125;;</span><br><span class="line">[textField wlj_enableSeatchTableViewWithConfig:searchTableviewConfig];</span><br></pre></td></tr></table></figure><p>demo地址：<a href="https://github.com/lijunW/WLJSearchTableView.git" target="_blank" rel="noopener">https://github.com/lijunW/WLJSearchTableView.git</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>iOS 多target添加依赖库</title>
      <link href="/2017/07/20/iOS%20%E5%A4%9Atarget%E6%B7%BB%E5%8A%A0%E4%BE%9D%E8%B5%96%E5%BA%93/"/>
      <url>/2017/07/20/iOS%20%E5%A4%9Atarget%E6%B7%BB%E5%8A%A0%E4%BE%9D%E8%B5%96%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p><code>CocoaPods多个target公用相同库,还可以添加额外的不同第三方库</code></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">platform :ios, <span class="string">'8.0'</span></span><br><span class="line"><span class="meta"># target数组 如果有新的target直接加入该数组</span></span><br><span class="line">targetsArray = [<span class="string">'targetName1'</span>, <span class="string">'targetName2'</span>, <span class="string">'targetName3'</span>]</span><br><span class="line"># 循环</span><br><span class="line">targetsArray.each <span class="keyword">do</span> |t|</span><br><span class="line">    target t <span class="keyword">do</span></span><br><span class="line">        pod <span class="string">'podname1'</span>, <span class="string">'~&gt; 0.0.1'</span></span><br><span class="line">        pod <span class="string">'podname2'</span>, <span class="string">'~&gt; 2.2.1'</span></span><br><span class="line">    end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p><code>给不同target添加依赖库</code></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">platform :ios, <span class="string">'8.0'</span></span><br><span class="line">target <span class="string">'targetName1'</span> <span class="keyword">do</span></span><br><span class="line">    pod <span class="string">'MJRefresh'</span>, <span class="string">'~&gt; 1.4.6'</span></span><br><span class="line">    pod <span class="string">'Masonry'</span>, <span class="string">'~&gt; 0.6.1'</span></span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">target <span class="string">'targetName2'</span> <span class="keyword">do</span></span><br><span class="line">    pod <span class="string">'MJRefresh'</span>, <span class="string">'~&gt; 1.4.6'</span></span><br><span class="line">    pod <span class="string">'Masonry'</span>, <span class="string">'~&gt; 0.6.1'</span></span><br><span class="line">    pod <span class="string">'AFNetworking'</span>, <span class="string">'~&gt; 3.0'</span></span><br><span class="line">end</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>iOS 图片压缩优化</title>
      <link href="/2017/05/29/iOS%20%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9%E4%BC%98%E5%8C%96/"/>
      <url>/2017/05/29/iOS%20%E5%9B%BE%E7%89%87%E5%8E%8B%E7%BC%A9%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>最近做图片上传时，遇到图片压缩的问题，由于应用情景大多是在非WIFI网络下，所有图片的压缩必留就要控制好，压缩的过小会失真，压缩不够费流量而且上传性能低（上传接口用的是图片转data在转二进制字符串的形式，这种形式上传图片性能很低，但是接口在这还是得用），从代码本身出发，还是有优化空间的</p><p>从网上找了一些图片压缩优化方案，综合了一下</p><p> 图片压缩的逻辑:（可根据实际需求调整）<br> 一:图片尺寸压缩 主要分为以下几种情况 一般参照像素为1080<br>  a.图片宽高均≤1080px时，图片尺寸保持不变;<br>  b.宽或高均＞1080px时 ——图片宽高比≤2，则将图片宽或者高取大的等比压缩至1080px; ——但是图片宽高比＞2时，则宽或者高取小的等比压缩至1080px;<br>  c.宽高一个＞1080px，另一个＜1080px，–图片宽高比＞2时，则宽高尺寸不变;–但是图片宽高比≤2时,则将图片宽或者高取大的等比压缩至1080px.<br> 二:图片质量压缩<br>  尺寸压缩后再进行质量压缩<br>  根据尺寸压缩后的data大小决定不同的压缩比例，（可根据实际需求调整）</p><p>直接上代码</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 我们的图片压缩参照为1080px</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KitTargetPx 1080</span></span><br><span class="line">+ (<span class="built_in">NSData</span> *)imageCompressForSize:(<span class="built_in">UIImage</span> *)sourceImage&#123;</span><br><span class="line">   <span class="keyword">return</span>  [<span class="built_in">UIImage</span> imageCompressForSize:sourceImage targetPx:KitTargetPx];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> mark -- 图片压缩方法</span></span><br><span class="line">+ (<span class="built_in">NSData</span> *)imageCompressForSize:(<span class="built_in">UIImage</span> *)sourceImage targetPx:(<span class="built_in">NSInteger</span>)targetPx &#123;</span><br><span class="line">    <span class="built_in">UIImage</span> *newImage = <span class="literal">nil</span>;             <span class="comment">// 尺寸压缩后的新图</span></span><br><span class="line">    <span class="built_in">CGSize</span> imageSize = sourceImage.size; <span class="comment">// 源图片的size</span></span><br><span class="line">    <span class="built_in">CGFloat</span> width = imageSize.width;     <span class="comment">// 源图片的宽</span></span><br><span class="line">    <span class="built_in">CGFloat</span> height = imageSize.height;   <span class="comment">// 原图片的高</span></span><br><span class="line">    <span class="built_in">BOOL</span> drawImge = <span class="literal">NO</span>;     <span class="comment">// 是否需要重绘图片 默认是NO</span></span><br><span class="line">    <span class="built_in">CGFloat</span> scaleFactor = <span class="number">0.0</span>;           <span class="comment">// 压缩比例</span></span><br><span class="line">    <span class="built_in">CGFloat</span> scaledWidth = targetPx;      <span class="comment">// 压缩时的宽度 默认是参照像素</span></span><br><span class="line">    <span class="built_in">CGFloat</span> scaledHeight = targetPx;     <span class="comment">// 压缩是的高度 默认是参照像素</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 先进行图片的尺寸的判断</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// a.图片宽高均≤参照像素时，图片尺寸保持不变</span></span><br><span class="line">    <span class="keyword">if</span> (width &lt; targetPx &amp;&amp; height &lt; targetPx) &#123;</span><br><span class="line">        newImage = sourceImage;</span><br><span class="line">    &#125;  <span class="keyword">else</span> <span class="keyword">if</span> (width &gt; targetPx &amp;&amp; height &gt; targetPx) &#123;</span><br><span class="line">        <span class="comment">// b.宽或高均＞1080px时</span></span><br><span class="line">        drawImge = <span class="literal">YES</span>;</span><br><span class="line">        <span class="built_in">CGFloat</span> factor = width / height;</span><br><span class="line">        <span class="keyword">if</span> (factor &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="comment">// b.1图片宽高比≤2，则将图片宽或者高取大的等比压缩至1080px</span></span><br><span class="line">            scaleFactor = width &gt; height ? targetPx / width : targetPx / height;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// b.2图片宽高比＞2时，则宽或者高取小的等比压缩至1080px</span></span><br><span class="line">            scaleFactor = width &gt; height ? targetPx / height : targetPx / width;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (width &gt; targetPx &amp;&amp;  height &lt; targetPx ) &#123;</span><br><span class="line">        <span class="comment">// c.宽高一个＞1080px，另一个＜1080px 宽大于1080</span></span><br><span class="line">        <span class="keyword">if</span> (width / height &gt; <span class="number">2</span>) &#123;</span><br><span class="line">            newImage = sourceImage;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            drawImge = <span class="literal">YES</span>;</span><br><span class="line">            scaleFactor = targetPx / width;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (width &lt; targetPx &amp;&amp;  height &gt; targetPx) &#123;</span><br><span class="line">        <span class="comment">// c.宽高一个＞1080px，另一个＜1080px 高大于1080</span></span><br><span class="line">        <span class="keyword">if</span> (height / width &gt; <span class="number">2</span>) &#123;</span><br><span class="line">            newImage = sourceImage;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            drawImge = <span class="literal">YES</span>;</span><br><span class="line">            scaleFactor = targetPx / height;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果图片需要重绘 就按照新的宽高压缩重绘图片</span></span><br><span class="line">    <span class="keyword">if</span> (drawImge == <span class="literal">YES</span>) &#123;</span><br><span class="line">        scaledWidth = width * scaleFactor;</span><br><span class="line">        scaledHeight = height * scaleFactor;</span><br><span class="line">        <span class="built_in">UIGraphicsBeginImageContext</span>(<span class="built_in">CGSizeMake</span>(scaledWidth, scaledHeight));</span><br><span class="line">        <span class="comment">// 绘制改变大小的图片</span></span><br><span class="line">        [sourceImage drawInRect:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, scaledWidth,scaledHeight)];</span><br><span class="line">        <span class="comment">// 从当前context中创建一个改变大小后的图片</span></span><br><span class="line">        newImage =<span class="built_in">UIGraphicsGetImageFromCurrentImageContext</span>();</span><br><span class="line">        <span class="comment">// 使当前的context出堆栈</span></span><br><span class="line">        <span class="built_in">UIGraphicsEndImageContext</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 防止出错  可以删掉的</span></span><br><span class="line">    <span class="keyword">if</span> (newImage == <span class="literal">nil</span>) &#123;</span><br><span class="line">        newImage = sourceImage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据图片大小 在进行质量上压缩</span></span><br><span class="line">    <span class="built_in">NSData</span> * scaledImageData = <span class="literal">nil</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">UIImageJPEGRepresentation</span>(newImage, <span class="number">1</span>) == <span class="literal">nil</span>) &#123;</span><br><span class="line">        scaledImageData = <span class="built_in">UIImagePNGRepresentation</span>(newImage);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        scaledImageData = <span class="built_in">UIImageJPEGRepresentation</span>(newImage, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (scaledImageData.length&gt;<span class="number">100</span>*<span class="number">1024</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (scaledImageData.length&gt;<span class="number">1024</span>*<span class="number">1024</span>) &#123;</span><br><span class="line">                <span class="comment">//1M以及以上（压缩到0.3）（由于接口性能限制，测试在5s下超过0.3的转为二进制字符串方式上传会直接失败，长度超过限制，如果用post的formData形式则不存在此问题）</span></span><br><span class="line">                scaledImageData=<span class="built_in">UIImageJPEGRepresentation</span>(newImage, <span class="number">0.3</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (scaledImageData.length&gt;<span class="number">512</span>*<span class="number">1024</span>) &#123;</span><br><span class="line">                <span class="comment">//0.5M-1M</span></span><br><span class="line">                scaledImageData=<span class="built_in">UIImageJPEGRepresentation</span>(newImage, <span class="number">0.5</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (scaledImageData.length&gt;<span class="number">200</span>*<span class="number">1024</span>) &#123;</span><br><span class="line">                <span class="comment">//0.25M-0.5M</span></span><br><span class="line">                scaledImageData=<span class="built_in">UIImageJPEGRepresentation</span>(newImage, <span class="number">0.8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> scaledImageData;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>iOS UIWebView 图片点击</title>
      <link href="/2016/12/21/iOS%20UIWebView%20%E5%9B%BE%E7%89%87%E7%82%B9%E5%87%BB/"/>
      <url>/2016/12/21/iOS%20UIWebView%20%E5%9B%BE%E7%89%87%E7%82%B9%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<p>最近在实现类似淘宝详情页的效果，我们是直接UIwebView加载url来实现的，然后要实现点击图片放大查看详情效果</p><p>直接上代码</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"GoodCell.h"</span></span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">GoodWebCell</span> : <span class="title">GoodCell</span>&lt;<span class="title">UIWebViewDelegate</span>&gt;</span></span><br><span class="line"><span class="keyword">@property</span>(<span class="keyword">nonatomic</span>,<span class="keyword">strong</span>)<span class="built_in">UIWebView</span> * webView;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"GoodWebCell.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"IDMPhotoBrowser.h"</span><span class="comment">//不错的图片预览组件，https://github.com/thiagoperes/IDMPhotoBrowser.git</span></span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">GoodWebCell</span> ()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSMutableArray</span> * _webUrlArray;<span class="comment">//保存webview中全部的imageUrl</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">GoodWebCell</span></span></span><br><span class="line"></span><br><span class="line">-(<span class="keyword">instancetype</span>)initWithStyle:(<span class="built_in">UITableViewCellStyle</span>)style reuseIdentifier:(<span class="built_in">NSString</span> *)reuseIdentifier&#123;</span><br><span class="line">    <span class="keyword">self</span>  = [<span class="keyword">super</span> initWithStyle:style reuseIdentifier:reuseIdentifier];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.webView = [[<span class="built_in">UIWebView</span> alloc]initWithFrame:<span class="keyword">self</span>.frame];</span><br><span class="line">        <span class="keyword">self</span>.webView.delegate = <span class="keyword">self</span>;</span><br><span class="line">        [<span class="keyword">self</span>.contentView addSubview:<span class="keyword">self</span>.webView];</span><br><span class="line">        [<span class="keyword">self</span>.webView mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make.edges.insets(<span class="built_in">UIEdgeInsetsZero</span>);</span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="comment">//self.webView.userInteractionEnabled = NO;</span></span><br><span class="line">        <span class="keyword">self</span>.webView.scrollView.alwaysBounceVertical = <span class="literal">NO</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//大小适应内容</span></span><br><span class="line">        _webView.autoresizingMask = (<span class="built_in">UIViewAutoresizingFlexibleWidth</span> | <span class="built_in">UIViewAutoresizingFlexibleHeight</span>);</span><br><span class="line">        _webView.scalesPageToFit = <span class="literal">YES</span>;</span><br><span class="line">        _webView.contentMode = <span class="built_in">UIViewContentModeScaleAspectFit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(<span class="keyword">void</span>)webViewDidFinishLoad:(<span class="built_in">UIWebView</span>*)webView&#123;</span><br><span class="line">    <span class="comment">//大小适应内容，显示完整的web内容，不要内部滑动</span></span><br><span class="line">    <span class="built_in">CGSize</span> actualSize = [webView sizeThatFits:<span class="built_in">CGSizeZero</span>];</span><br><span class="line">    <span class="built_in">CGRect</span> newFrame = webView.frame;</span><br><span class="line">    newFrame.size.height = actualSize.height;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">CGRectEqualToRect</span>(webView.frame, newFrame)) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.webView mas_updateConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">            make.height.mas_equalTo(newFrame.size.height);</span><br><span class="line">        &#125;];</span><br><span class="line">        [<span class="keyword">self</span>.parentTableView reloadData];<span class="comment">//cell所在的tableView,注意要week引用</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//这里是js，主要目的实现对url的获取</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    HTML DOM getElementsByTagName():  返回带有指定标签名的对象的集合</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">static</span>  <span class="built_in">NSString</span> * <span class="keyword">const</span> jsGetImages =</span><br><span class="line">    <span class="string">@"function getImages()&#123;\</span></span><br><span class="line"><span class="string">    var objs = document.getElementsByTagName(\"img\");\   //获取所有图片标签</span></span><br><span class="line"><span class="string">    var imgScr = '';\</span></span><br><span class="line"><span class="string">    for(var i=0;i&lt;objs.length;i++)&#123;\</span></span><br><span class="line"><span class="string">    imgScr = imgScr + objs[i].src + '+';\</span></span><br><span class="line"><span class="string">    &#125;;\</span></span><br><span class="line"><span class="string">    return imgScr;\</span></span><br><span class="line"><span class="string">    &#125;;"</span>;</span><br><span class="line"></span><br><span class="line">    [webView stringByEvaluatingJavaScriptFromString:jsGetImages];<span class="comment">//注入js方法</span></span><br><span class="line">    <span class="built_in">NSString</span> *urlResurlt = [webView stringByEvaluatingJavaScriptFromString:<span class="string">@"getImages()"</span>];</span><br><span class="line">    _webUrlArray = [<span class="built_in">NSMutableArray</span> arrayWithArray:[urlResurlt componentsSeparatedByString:<span class="string">@"+"</span>]];</span><br><span class="line">    <span class="keyword">if</span> (_webUrlArray.count &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">        [_webUrlArray removeLastObject];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//urlResurlt 就是获取到得所有图片的url的拼接；_webUrlArray就是所有Url的数组</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加图片可点击js</span></span><br><span class="line">    [webView stringByEvaluatingJavaScriptFromString:<span class="string">@"function registerImageClickAction()&#123;\</span></span><br><span class="line"><span class="string">     var imgs=document.getElementsByTagName('img');\</span></span><br><span class="line"><span class="string">     var length=imgs.length;\</span></span><br><span class="line"><span class="string">     for(var i=0;i&lt;length;i++)&#123;\</span></span><br><span class="line"><span class="string">     img=imgs[i];\</span></span><br><span class="line"><span class="string">     img.onclick=function()&#123;\</span></span><br><span class="line"><span class="string">     window.location.href='image-preview:'+this.src&#125;\</span></span><br><span class="line"><span class="string">     &#125;\</span></span><br><span class="line"><span class="string">     &#125;"</span>];</span><br><span class="line">    [webView stringByEvaluatingJavaScriptFromString:<span class="string">@"registerImageClickAction();"</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//在这个方法中捕获到图片的点击事件和被点击图片的url</span></span><br><span class="line">- (<span class="built_in">BOOL</span>)webView:(<span class="built_in">UIWebView</span> *)webView shouldStartLoadWithRequest:(<span class="built_in">NSURLRequest</span> *)request navigationType:(<span class="built_in">UIWebViewNavigationType</span>)navigationType &#123;</span><br><span class="line">    <span class="comment">//预览图片</span></span><br><span class="line">    <span class="keyword">if</span> ([request.URL.scheme isEqualToString:<span class="string">@"image-preview"</span>]) &#123;</span><br><span class="line">        <span class="built_in">NSString</span>* path = [request.URL.absoluteString substringFromIndex:[<span class="string">@"image-preview:"</span> length]];</span><br><span class="line">        path = [path stringByAddingPercentEscapesUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">        <span class="comment">//path 就是被点击图片的url</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">NSMutableArray</span> * photos =[[<span class="built_in">NSMutableArray</span> alloc]init];</span><br><span class="line">        <span class="keyword">if</span> ([_webUrlArray containsObject:path]) &#123;</span><br><span class="line">            <span class="keyword">for</span> ( <span class="built_in">NSString</span> * imgurl <span class="keyword">in</span> _webUrlArray) &#123;</span><br><span class="line">                IDMPhoto *photo = [IDMPhoto photoWithURL:[<span class="built_in">NSURL</span> URLWithString:imgurl]];</span><br><span class="line">                [photos addObject:photo];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            [photos addObject:path];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        IDMPhotoBrowser *browser = [[IDMPhotoBrowser alloc] initWithPhotos:photos animatedFromView:<span class="keyword">self</span>.webView];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ([_webUrlArray containsObject:path]) &#123;</span><br><span class="line">            [browser setInitialPageIndex:[_webUrlArray indexOfObject:path]];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//browser.displayActionButton = NO;</span></span><br><span class="line">        browser.displayArrowButton = <span class="literal">YES</span>;</span><br><span class="line">        browser.displayCounterLabel = <span class="literal">YES</span>;</span><br><span class="line">        browser.displayDoneButton = <span class="literal">NO</span>;</span><br><span class="line">        browser.dismissOnTouch = <span class="literal">YES</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">UIViewController</span> * rootVC =  [BaseViewController  getCurrentVC];<span class="comment">//获取当前的vc</span></span><br><span class="line">        <span class="keyword">if</span> (rootVC.navigationController &amp;&amp; ![rootVC.navigationController isKindOfClass:[BaseNavigationController <span class="keyword">class</span>]]) &#123;</span><br><span class="line">            [rootVC.navigationController pushViewController:browser animated:<span class="literal">NO</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            [rootVC presentViewController:browser animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>iOS ReactiveCocoa常用API</title>
      <link href="/2016/03/09/iOS%20ReactiveCocoa%E5%B8%B8%E7%94%A8API/"/>
      <url>/2016/03/09/iOS%20ReactiveCocoa%E5%B8%B8%E7%94%A8API/</url>
      
        <content type="html"><![CDATA[<p>一、常见类<br>1、<code>RACSiganl</code> 信号类。<br><code>RACEmptySignal :</code> 空信号，用来实现 <code>RACSignal</code> 的 <code>+empty</code> 方法;<br><code>RACReturnSignal :</code>一元信号，用来实现 RACSignal 的 +return: 方法;<br><code>RACDynamicSignal :</code>动态信号，使用一个 block - 来实现订阅行为，我们在使用 RACSignal 的 <code>+createSignal:</code> 方法 时创建的就是该类的实例;<br><code>RACErrorSignal :</code>错误信号，用来实现 RACSignal 的 +error: 方法;<br><code>RACChannelTerminal :</code>通道终端，代表 RACChannel 的一个终端，用来实现双向绑定。<br>2、<code>RACSubscriber</code> 订阅者<br>3、<code>RACDisposable</code>用于取消订阅或者清理资源，当信号发送完成或者发送错误的时候，就会自动触发它。<br><code>RACSerialDisposable :</code>作为 disposable 的容器使用，可以包含一个 disposable 对象，并且允许将这个 disposable 对象通过原子操作交换出来;<br><code>RACKVOTrampoline :</code>代表一次 KVO 观察，并且可以用来停止观察;<br><code>RACCompoundDisposable :</code>它可以包含多个 disposable 对象，并且支持手动添加和移除 disposable 对象<br><code>RACScopedDisposable :</code>当它被 dealloc 的时候调用本身的 -dispose 方法。<br>4、<code>RACSubject</code> 信号提供者，自己可以充当信号，又能发送信号。<br><code>RACGroupedSignal :</code>分组信号，用来实现 RACSignal 的分组功能;<br><code>RACBehaviorSubject :重演最后值的信号，当被订阅时，会向订阅者发送它最后接收到的值;</code>RACReplaySubject :<code>重演信号，保存发送过的值，当被订阅时，会向订阅者重新发送这些值。 5、RACTuple 元组类,类似NSArray,用来包装值.6、</code>RACSequence<code>RAC中的集合类7、</code>RACCommand<code>RAC中用于处理事件的类，可以把事件如何处理,事件中的数据如何传递，包装到这个类中，他可 以很方便的监控事件的执行过程。8、</code>RACMulticastConnection<code>用于当一个信号，被多次订阅时，为了保证创建信号时，避免多次调用创建信号中的 block，造成副作用，可以使用这个类处理。9、</code>RACScheduler<code>RAC中的队列，用GCD封装的。</code>RACImmediateScheduler :<code>立即执行调度的任务，这是唯一一个支持同步执行的调度器;</code>RACQueueScheduler :<code>一个抽象的队列调度器，在一个 GCD 串行列队中异步调度所有任务;</code>RACTargetQueueScheduler :<code>继承自 RACQueueScheduler ，在一个以一个任意的 GCD 队列为 target 的串行队列 中异步调度所有任务;</code>RACSubscriptionScheduler :<code>一个只用来调度订阅的调度器。二、常见用法</code>rac_signalForSelector :<code>代替代理</code>rac_valuesAndChangesForKeyPath:<code>KVO</code>rac_signalForControlEvents:<code>监听事件</code>rac_addObserverForName<code>代替通知</code>rac_textSignal:<code>监听文本框文字改变</code>rac_liftSelector:withSignalsFromArray:Signals:<code>当传入的Signals(信号数组)，每一个signal都至少</code>sendNext过一次，就 会去触发第一个selector参数的方法。<br>三、常见宏<br><code>RAC(TARGET, [KEYPATH, [NIL_VALUE]]):</code>用于给某个对象的某个属性绑定<br><code>RACObserve(self, name) :</code>监听某个对象的某个属性,返回的是信号。 @weakify(Obj)和@strongify(Obj)<br><code>RACTuplePack :</code>把数据包装成RACTuple(元组类)<br><code>RACTupleUnpack:</code>把RACTuple(元组类)解包成对应的数据 RACChannelTo 用于双向绑定的一个终端<br>四、常用操作方法<br><code>flattenMap</code> <code>map</code>用于把源信号内容映射成新的内容。<br><code>concat</code> 组合 按一定顺序拼接信号，当多个信号发出的时候，有顺序的接收信号<br><code>then</code> 用于连接两个信号，当第一个信号完成，才会连接then返回的信号。<br><code>merge</code> 把多个信号合并为一个信号，任何一个信号有新值的时候就会调用<br><code>zipWith</code> 把两个信号压缩成一个信号，只有当两个信号同时发出信号内容时，并且把两个信号的内容合并成一个元 组，才会触发压缩流的next事件。<br><code>combineLatest:</code>将多个信号合并起来，并且拿到各个信号的最新的值,必须每个合并的signal至少都有过一次 sendNext，才会触发合并的信号。<br><code>reduce</code> 聚合:用于信号发出的内容是元组，把信号发出元组的值聚合成一个值 filter:过滤信号，使用它可以获取满足条件的信号.<br><code>ignore:</code>忽略完某些值的信号.<br><code>distinctUntilChanged:</code>当上一次的值和当前的值有明显的变化就会发出信号，否则会被忽略掉。 take:从开始一共取N次的信号<br><code>takeLast:</code>取最后N次的信号,前提条件，订阅者必须调用完成，因为只有完成，就知道总共有多少信号. <code>takeUntil:(RACSignal *):</code>获取信号直到某个信号执行完成<br><code>skip:(NSUInteger):</code> 跳过几个信号,不接受。<br> switchToLatest:<code>用于signalOfSignals(信号的信号)，有时候信号也会发出信号，会在signalOfSignals中，获取</code>signalOfSignals<code>发送的最新信号。</code>doNext:<code>执行Next之前，会先执行这个Block</code>doCompleted:<code>执行sendCompleted之前，会先执行这个Block</code>timeout:<code>超时，可以让一个信号在一定的时间后，自动报错。</code>interval<code>定时:每隔一段时间发出信号</code>delay<code>延迟发送next。</code>retry<code>重试 :只要失败，就会重新执行创建信号中的block,直到成功.</code>replay<code>重放:当一个信号被多次订阅,反复播放内容</code>throttle` 节流:当某个信号发送比较频繁时，可以使用节流，在某一段时间不发送信号内容，过了一段时间获取信号的最 新内容发出。</p><p>五、<code>UI - Category</code>(常用汇总)<br>1、<code>rac_prepareForReuseSignal:</code> 需要复用时用<br>相关UI: <code>MKAnnotationView、UICollectionReusableView、UITableViewCell、UITableViewHeaderFooterView2、</code>rac_buttonClickedSignal:<code>点击事件触发信号相关UI:UIActionSheet、UIAlertView3、</code>rac_command:button<code>类、刷新类相关命令替换 相关UI:UIBarButtonItem、UIButton、UIRefreshControl4、</code>rac_signalForControlEvents: control event<code>触发相关UI:UIControl5、</code>rac_gestureSignal UIGestureRecognizer<code>事件处理信号相关UI:UIGestureRecognizer6、</code>rac_imageSelectedSignal<code>选择图片的信号相关UI:UIImagePickerController7、</code>rac_textSignal<code>相关UI:UITextField、UITextView8、可实现双向绑定的相关API</code>rac_channelForControlEvents: key: nilValue:<code>相关UI:UIControl类</code>rac_newDateChannelWithNilValue:<code>相关UI:UIDatePicker</code>rac_newSelectedSegmentIndexChannelWithNilValue:<code>相关UI:UISegmentedControl</code>rac_newValueChannelWithNilValue:<code>相关UI:UISlider、UIStepper</code>rac_newOnChannel<code>相关UI:UISwitch</code>rac_newTextChannel<code>相关UI:UITextField</code>六、<code>Foundation - Category</code> (常用汇总)<br>1、<code>NSArray</code><br><code>rac_sequence</code> 信号集合<br>2、<code>NSData</code><br><code>rac_readContentsOfURL: options: scheduler:</code> 比oc多出线程设置<br>3、<code>NSDictionary</code><br><code>rac_sequence</code> 不解释<br><code>rac_keySequence</code> key 集合<br><code>rac_valueSequence</code> value 集合<br>4、<code>NSEnumerator</code><br><code>rac_sequence</code> 不解释<br>5、<code>NSFileHandle</code><br><code>rac_readInBackground</code> 见名知意<br>6、<code>NSIndexSet</code><br><code>rac_sequence</code> 不解释<br>7、<code>NSInvocation</code><br><code>rac_setArgument: atIndex:</code> 设置参数<br><code>rac_argumentAtIndex</code> 取某个参数<br><code>rac_returnValue</code> 所关联方法的返回值<br>8、<code>NSNotificationCenter</code><br><code>rac_addObserverForName: object:</code> 注册通知<br>9、<code>NSObject</code><br><code>rac_willDeallocSignal</code> 对象销毁时发动的信号<br><code>rac_description</code> debug用<br><code>rac_observeKeyPath: options: observer: block:</code> 监听某个事件<br><code>rac_liftSelector: withSignals:</code> 全部信号都next在执行<br><code>rac_signalForSelector:</code> 代替某个方法<br><code>rac_signalForSelector:(SEL)selector fromProtocol:</code> 代替代理<br>10、<code>NSOrderedSet</code><br><code>rac_sequence</code> 不解释<br>11、<code>NSSet</code><br><code>rac_sequence</code> 不解释<br>12、<code>NSString</code><br><code>rac_keyPathComponents</code> 获取一个路径所有的部分 <code>rac_keyPathByDeletingLastKeyPathComponent</code> 删除路径最后一部分 <code>rac_keyPathByDeletingFirstKeyPathComponent</code> 删除路径第一部分 <code>rac_sequence</code> 不解释<br><code>rac_readContentsOfURL: usedEncoding: scheduler:</code> 比之OC多线程调用 13、<code>NSURLConnection</code><br><code>rac_sendAsynchronousRequest</code> 发起异步请求<br>14、<code>NSUserDefaults</code><br><code>rac_channelTerminalForKey</code> 用于双向绑定</p><p>原文链接<a href="http://www.cocoachina.com/ios/20160729/17236.html" target="_blank" rel="noopener">http://www.cocoachina.com/ios/20160729/17236.html</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>iOS调用手机中的打电话，短信，邮箱，地图</title>
      <link href="/2015/07/29/iOS%E8%B0%83%E7%94%A8%E6%89%8B%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%89%93%E7%94%B5%E8%AF%9D%EF%BC%8C%E7%9F%AD%E4%BF%A1%EF%BC%8C%E9%82%AE%E7%AE%B1%EF%BC%8C%E5%9C%B0%E5%9B%BE/"/>
      <url>/2015/07/29/iOS%E8%B0%83%E7%94%A8%E6%89%8B%E6%9C%BA%E4%B8%AD%E7%9A%84%E6%89%93%E7%94%B5%E8%AF%9D%EF%BC%8C%E7%9F%AD%E4%BF%A1%EF%BC%8C%E9%82%AE%E7%AE%B1%EF%BC%8C%E5%9C%B0%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<p>1、调用邮件客户端(Apple Mail)</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="built_in">UIApplication</span> sharedApplication] openURL:[<span class="built_in">NSURL</span> URLWithString:<span class="string">@"mailto:wanglijun311@gmail.com"</span>]];</span><br></pre></td></tr></table></figure><p>2、调用电话(Phone Number)</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="type">UIApplication</span> sharedApplication] openURL:[<span class="type">NSURL</span> <span class="type">URLWithString</span>:@<span class="string">"tel:8008808888"</span>]];</span><br></pre></td></tr></table></figure><p>iOS应用内拨打电话结束后返回应用<br>一般在应用中拨打电话的方式是：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="type">UIApplication</span> sharedApplication] openURL:[<span class="type">NSURL</span> <span class="type">URLWithString</span>:@<span class="string">"tel:123456789"</span>]];</span><br></pre></td></tr></table></figure><p>使用这种方式拨打电话时，当用户结束通话后，iphone界面会停留在电话界面。<br>用如下方式，可以使得用户结束通话后自动返回到应用：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">UIWebView</span>*callWebview =[[<span class="type">UIWebView</span> alloc] <span class="keyword">init</span>];</span><br><span class="line"><span class="type">NSURL</span> *telURL =[<span class="type">NSURL</span> <span class="type">URLWithString</span>:@<span class="string">"tel:10086"</span>];<span class="comment">// 貌似tel:// 或者 tel: 都行</span></span><br><span class="line">[callWebview loadRequest:[<span class="type">NSURLRequest</span> requestWithURL:telURL]];</span><br><span class="line"></span><br><span class="line"><span class="comment">//记得添加到view上</span></span><br><span class="line">[<span class="keyword">self</span>.view addSubview:callWebview];</span><br></pre></td></tr></table></figure><p>还有一种私有方法：（可能不能通过审核）</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="built_in">UIApplication</span> sharedApplication] openURL:[<span class="built_in">NSURL</span> URLWithString:<span class="string">@"telprompt://10086"</span>]];</span><br></pre></td></tr></table></figure><p>3、调用短信(SMS)</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="built_in">UIApplication</span> sharedApplication] openURL:[<span class="built_in">NSURL</span> URLWithString:<span class="string">@"sms://18055352658"</span>]];</span><br></pre></td></tr></table></figure><p>4、调用自带 浏览器 safari</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="built_in">UIApplication</span> sharedApplication] openURL:[<span class="built_in">NSURL</span> URLWithString:<span class="string">@"http://lijunwang.wang"</span>]];</span><br></pre></td></tr></table></figure><p>调用phone可以传递号码，调用SMS 只能设定号码，不能初始化SMS内容。<br>若需要传递内容可以做如下操作：<br>加入：<code>MessageUI.framework</code></p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;MessageUI/MFMessageComposeViewController.h&gt;</span></span></span><br><span class="line">实现代理：MFMessageComposeViewControllerDelegate</span><br><span class="line">调用sendSMS函数</span><br><span class="line"><span class="comment">//内容，收件人列表</span></span><br><span class="line">- (<span class="keyword">void</span>)sendSMS:(<span class="built_in">NSString</span> *)bodyOfMessage recipientList:(<span class="built_in">NSArray</span> *)recipients</span><br><span class="line">&#123;</span><br><span class="line">MFMessageComposeViewController *controller = [[[MFMessageComposeViewController alloc] init] autorelease];</span><br><span class="line"><span class="keyword">if</span>([MFMessageComposeViewController canSendText])</span><br><span class="line">&#123;</span><br><span class="line">controller.body = bodyOfMessage;</span><br><span class="line">controller.recipients = recipients;</span><br><span class="line">controller.messageComposeDelegate = <span class="keyword">self</span>;</span><br><span class="line">[<span class="keyword">self</span> presentModalViewController:controller animated:<span class="literal">YES</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 处理发送完的响应结果</span></span><br><span class="line">- (<span class="keyword">void</span>)messageComposeViewController:(MFMessageComposeViewController *)controller didFinishWithResult:(MessageComposeResult)result</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">self</span> dismissModalViewControllerAnimated:<span class="literal">YES</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (result == MessageComposeResultCancelled)</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Message cancelled"</span>)</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (result == MessageComposeResultSent)</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Message sent"</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Message failed"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>默认发送短信的界面为英文的，解决办法为：<br>在<code>.xib</code> 中的Localization添加一組chinese就ok了</p><p>5、调用谷歌地图(Google Maps)<br>URL模式：<a href="http://maps.google.com/maps?q=" target="_blank" rel="noopener">http://maps.google.com/maps?q=</a><strong>${QUERY_STRING}</strong><br>代码示例：</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span>* searchQuery =<span class="string">@"1 Infinite Loop, Cupertino, CA 95014"</span>;</span><br><span class="line">searchQuery =[addressText stringByAddingPercentEscapesUsingEncoding: <span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"><span class="built_in">NSString</span>* urlString =[<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"http://maps.google.com/maps?q=%@"</span>, searchQuery];</span><br><span class="line">[[<span class="built_in">UIApplication</span> sharedApplication] openURL:[<span class="built_in">NSURL</span> URLWithString:urlText]];</span><br></pre></td></tr></table></figure><p>6、调用应用商店(AppStore)<br>URL模式：<a href="http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewSoftware?id=291586600&amp;mt=8" target="_blank" rel="noopener">http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewSoftware?id=291586600&amp;mt=8</a><br>代码示例：</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSURL</span>*appStoreUrl =[<span class="built_in">NSURL</span> URLWithString:<span class="string">@"http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewSoftware?id=291586600&amp;amp;amp;mt=8"</span>];</span><br><span class="line">[[<span class="built_in">UIApplication</span> sharedApplication] openURL:appStoreUrl];</span><br></pre></td></tr></table></figure><p>注意：对于iOS10及以上 如果调用 [UIApplication sharedApplication] openURL:时响应很慢，可以调用新的API</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)openURL:(<span class="built_in">NSURL</span>*)url options:(<span class="built_in">NSDictionary</span>&lt;<span class="built_in">NSString</span> *, <span class="keyword">id</span>&gt; *)options completionHandler:(<span class="keyword">void</span> (^ __<span class="keyword">nullable</span>)(<span class="built_in">BOOL</span> success))completion <span class="built_in">NS_AVAILABLE_IOS</span>(<span class="number">10</span>_0) <span class="built_in">NS_EXTENSION_UNAVAILABLE_IOS</span>(<span class="string">""</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
