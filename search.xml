<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>iOS原生域名解析</title>
      <link href="/2020/04/15/iOS%E5%8E%9F%E7%94%9F%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/"/>
      <url>/2020/04/15/iOS%E5%8E%9F%E7%94%9F%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h3 id="需求背景"><a href="#需求背景" class="headerlink" title="需求背景"></a>需求背景</h3><p><img src="https://tva1.sinaimg.cn/large/007S8ZIlgy1gf605zv1ofj303003074s.jpg" alt="">有多个域名，使用串行逐一解析/并发解析，只要当解析出一个，先给出<br>解析结果。后续继续解析或取消解析。预留了httpDNS的混合使用，后续考虑添加</p><h3 id="方法封装"><a href="#方法封装" class="headerlink" title="方法封装"></a>方法封装</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// DNS解析</span></span><br><span class="line"><span class="comment">/// @param hosts 待解析的域名数组</span></span><br><span class="line"><span class="comment">/// @param callBackQueue 回调执行队列,默认global_queue</span></span><br><span class="line"><span class="comment">/// @param timeOut 超时</span></span><br><span class="line"><span class="comment">/// @param completion 回调</span></span><br><span class="line"><span class="comment">/// bestHost 最先解析出来的ip，可能为空</span></span><br><span class="line"><span class="comment">/// hosters所有解析出来的域名对应的ip，可能为空</span></span><br><span class="line"><span class="comment">/// coast 耗时</span></span><br><span class="line"><span class="comment">/// queueAttr 串行/并发</span></span><br><span class="line"><span class="comment">/// useHttpDNS 使用HttpDNS（预留，未实现）</span></span><br><span class="line"><span class="comment">/// error error</span></span><br><span class="line">+(<span class="keyword">void</span>)resolution:(<span class="keyword">nonnull</span> <span class="built_in">NSArray</span>&lt;<span class="built_in">NSString</span>*&gt;*)hosts queueAttr:(<span class="keyword">nonnull</span> dispatch_queue_attr_t)queueAttr useHttpDNS:(<span class="built_in">BOOL</span>)useHttpDNS dispatchCallBackQueue:(<span class="keyword">nullable</span> <span class="built_in">dispatch_queue_t</span>)callBackQueue timeOut:(<span class="built_in">NSTimeInterval</span>)timeOut completion:(<span class="keyword">void</span>(^)(<span class="built_in">NSString</span> * _Nullable bestHostIP,<span class="built_in">NSString</span> * _Nullable bestHost,<span class="built_in">NSDictionary</span>* _Nullable hosters,<span class="built_in">NSTimeInterval</span> coast, <span class="built_in">NSError</span> * _Nullable error))completion&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CFAbsoluteTime</span> start = <span class="built_in">CFAbsoluteTimeGetCurrent</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (callBackQueue == <span class="literal">nil</span>) &#123;</span><br><span class="line">        callBackQueue = dispatch_get_global_queue(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> (^exceptionHandler)(<span class="built_in">NSException</span> *exception) = ^(<span class="built_in">NSException</span> *exception)&#123;</span><br><span class="line">        <span class="built_in">dispatch_async</span>(callBackQueue, ^&#123;</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">CFAbsoluteTime</span> end = <span class="built_in">CFAbsoluteTimeGetCurrent</span>();</span><br><span class="line">            <span class="built_in">NSTimeInterval</span> coast = end - start;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"resolutionCompleteOnException,thread:%@,coast:%.2f"</span>,[<span class="built_in">NSThread</span> currentThread],coast);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (completion) &#123;</span><br><span class="line">                completion(<span class="literal">nil</span>,<span class="literal">nil</span>,<span class="literal">nil</span>,coast,[<span class="built_in">NSError</span> errorWithDomain:[<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"解析异常,name:%@,reason:%@"</span>,exception.name,exception.reason] code:<span class="number">-9999</span> userInfo:exception.userInfo]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">@try</span> &#123;</span><br><span class="line"><span class="comment">//        __block NSError * resolutionError = nil;</span></span><br><span class="line">        </span><br><span class="line">        __block <span class="built_in">NSMutableArray</span> &lt;<span class="built_in">NSDictionary</span>*&gt;*tempIps = [[<span class="built_in">NSMutableArray</span> alloc] init];</span><br><span class="line">        __block <span class="built_in">NSMutableDictionary</span> * results = [[<span class="built_in">NSMutableDictionary</span> alloc]init];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">NSLock</span> * saveResultLock = [[<span class="built_in">NSLock</span> alloc]init];</span><br><span class="line">        saveResultLock.name = <span class="string">@"Host.resolution.lock"</span>;</span><br><span class="line">                </span><br><span class="line">        dispatch_semaphore_t dsema = dispatch_semaphore_create(<span class="number">0</span>);</span><br><span class="line">        </span><br><span class="line">        dispatch_group_t g = dispatch_group_create();</span><br><span class="line">        <span class="built_in">dispatch_queue_t</span> resolutionQueue = dispatch_queue_create(<span class="string">"Host.resolution"</span>, dispatch_queue_attr_make_with_qos_class (queueAttr, QOS_CLASS_USER_INITIATED,<span class="number">-1</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSMutableArray</span> * handHostArray = [<span class="built_in">NSMutableArray</span> arrayWithCapacity:hosts.count];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//去除http头尾</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">NSString</span> * host <span class="keyword">in</span> hosts) &#123;</span><br><span class="line">            <span class="built_in">NSString</span> * orignalHost = host.copy;</span><br><span class="line">            <span class="built_in">NSString</span> * newHost = host.copy;</span><br><span class="line">            <span class="keyword">if</span> (host != <span class="literal">nil</span> &amp;&amp; host.length &gt;<span class="number">0</span> &amp;&amp; [host hasPrefix:<span class="string">@"http"</span>]) &#123;</span><br><span class="line">                newHost = [<span class="built_in">NSURL</span> URLWithString:host].host;</span><br><span class="line">                <span class="keyword">if</span> (newHost == <span class="literal">nil</span>) &#123;</span><br><span class="line">                    newHost = orignalHost;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            [handHostArray addObject:newHost];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">NSString</span> * host <span class="keyword">in</span> handHostArray) &#123;</span><br><span class="line">            </span><br><span class="line">            dispatch_group_async(g, resolutionQueue, ^&#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">@try</span> &#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">                    <span class="built_in">NSLog</span>(<span class="string">@"⚠️handHost:%@,thread:%@"</span>,host,[<span class="built_in">NSThread</span> currentThread]);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">                    <span class="built_in">CFHostRef</span> hostRef = <span class="built_in">CFHostCreateWithName</span>(kCFAllocatorDefault, (__bridge <span class="built_in">CFStringRef</span>)host);</span><br><span class="line">                    <span class="keyword">if</span> (hostRef)&#123;</span><br><span class="line">                        <span class="comment">//CFStreamError * error = NULL;</span></span><br><span class="line">                        Boolean result = <span class="built_in">CFHostStartInfoResolution</span>(hostRef, kCFHostAddresses, <span class="literal">NULL</span>);</span><br><span class="line">                        <span class="keyword">if</span> (result == <span class="literal">TRUE</span>)&#123;</span><br><span class="line">                            <span class="built_in">NSArray</span> *addresses = (__bridge <span class="built_in">NSArray</span>*)<span class="built_in">CFHostGetAddressing</span>(hostRef, &amp;result);</span><br><span class="line">                            <span class="built_in">NSMutableArray</span> *addressStrings = [[<span class="built_in">NSMutableArray</span> alloc]initWithCapacity:addresses.count];</span><br><span class="line">                            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; addresses.count; i++)&#123;</span><br><span class="line">                                <span class="keyword">struct</span> sockaddr_in* remoteAddr;</span><br><span class="line">                                <span class="built_in">CFDataRef</span> saData = (<span class="built_in">CFDataRef</span>)<span class="built_in">CFArrayGetValueAtIndex</span>((__bridge <span class="built_in">CFArrayRef</span>)addresses, i);</span><br><span class="line">                                remoteAddr = (<span class="keyword">struct</span> sockaddr_in*)<span class="built_in">CFDataGetBytePtr</span>(saData);</span><br><span class="line">                                <span class="keyword">if</span>(remoteAddr != <span class="literal">NULL</span>)&#123;</span><br><span class="line">                                    <span class="keyword">const</span> <span class="keyword">char</span> *strIP = inet_ntoa(remoteAddr-&gt;sin_addr);</span><br><span class="line">                                    <span class="built_in">NSString</span> *strIPString =[<span class="built_in">NSString</span> stringWithCString:strIP encoding:<span class="built_in">NSASCIIStringEncoding</span>];</span><br><span class="line">                                    </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">                                    <span class="built_in">NSLog</span>(<span class="string">@"♻️RESOLVED:%@-&gt;%d:&lt;%@&gt;"</span>, host, i, strIPString);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">                                    <span class="keyword">if</span> (strIPString != <span class="literal">nil</span> &amp;&amp; strIPString.length &gt; <span class="number">0</span> &amp;&amp; [<span class="built_in">CLSDKNetWorkingManager</span> checkIPValid:strIPString]) &#123;</span><br><span class="line">                                        </span><br><span class="line">                                        [addressStrings addObject:strIPString];</span><br><span class="line"></span><br><span class="line">                                        <span class="built_in">NSMutableDictionary</span> * hostIP = [<span class="built_in">NSMutableDictionary</span> dictionary];</span><br><span class="line">                                        hostIP[<span class="string">@"ip"</span>] = strIPString;</span><br><span class="line">                                        hostIP[<span class="string">@"host"</span>] = host;</span><br><span class="line"></span><br><span class="line">                                        [saveResultLock lock];</span><br><span class="line">                                        [tempIps addObject:hostIP];</span><br><span class="line">                                        [saveResultLock unlock];</span><br><span class="line">                                    &#125;</span><br><span class="line">                                    </span><br><span class="line">                                &#125;</span><br><span class="line"><span class="comment">//                                CFRelease(saData);</span></span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span> (addressStrings.count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                </span><br><span class="line">                                [saveResultLock lock];</span><br><span class="line">                                results[host] = addressStrings;</span><br><span class="line">                                [saveResultLock unlock];</span><br><span class="line">                                </span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="built_in">CFRelease</span>(hostRef);</span><br><span class="line"></span><br><span class="line">                    [saveResultLock lock];</span><br><span class="line">                    <span class="built_in">NSInteger</span> tempIpsCount = tempIps.count;</span><br><span class="line">                    [saveResultLock unlock];</span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">if</span> (tempIpsCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        dispatch_semaphore_signal(dsema);</span><br><span class="line">                    &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">                    <span class="built_in">NSLog</span>(<span class="string">@"✅handHostComplete:%@,thread:%@,"</span>,host,[<span class="built_in">NSThread</span> currentThread]);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">                    </span><br><span class="line">                &#125; <span class="keyword">@catch</span> (<span class="built_in">NSException</span> *exception) &#123;</span><br><span class="line">                    <span class="built_in">NSLog</span>(<span class="string">@"resolutionException:name:%@,reason:%@"</span>,exception.name,exception.reason);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        dispatch_group_notify(g, resolutionQueue, ^&#123;</span><br><span class="line">            <span class="comment">//全部执行完毕</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"group_notify_completed,thread:%@"</span>,<span class="built_in">NSThread</span>.currentThread);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            dispatch_semaphore_signal(dsema);</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">dispatch_async</span>(callBackQueue, ^&#123;</span><br><span class="line">            </span><br><span class="line">            dispatch_time_t timeOut_t = DISPATCH_TIME_FOREVER;</span><br><span class="line">            <span class="keyword">if</span> (timeOut &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                timeOut_t = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(timeOut * <span class="built_in">NSEC_PER_SEC</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"⚠️WaittingForResolution:%@,thread:%@"</span>,tempIps,[<span class="built_in">NSThread</span> currentThread]);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            dispatch_semaphore_wait(dsema,timeOut_t);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">CFAbsoluteTime</span> end = <span class="built_in">CFAbsoluteTimeGetCurrent</span>();</span><br><span class="line">            <span class="built_in">NSTimeInterval</span> coast = end - start;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"✅resolutionComplete:%@,thread:%@,coast:%.2f"</span>,tempIps,[<span class="built_in">NSThread</span> currentThread],coast);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line"><span class="comment">//            //取消正在进行的解析</span></span><br><span class="line"><span class="comment">//            dispatch_async(resolutionQueue, ^&#123;</span></span><br><span class="line"><span class="comment">//                @try &#123;</span></span><br><span class="line"><span class="comment">//                    NSMutableArray * temphosts = [handHostArray mutableCopy];</span></span><br><span class="line"><span class="comment">//                    [saveResultLock lock];</span></span><br><span class="line"><span class="comment">//                    [temphosts removeObjectsInArray:results.allKeys];</span></span><br><span class="line"><span class="comment">//                    [saveResultLock unlock];</span></span><br><span class="line"><span class="comment">//                    </span></span><br><span class="line"><span class="comment">//                    for (NSString *hosting in temphosts) &#123;</span></span><br><span class="line"><span class="comment">//                        CFHostRef hostRef = CFHostCreateWithName(kCFAllocatorDefault, (__bridge CFStringRef)hosting);</span></span><br><span class="line"><span class="comment">//#ifdef DEBUG</span></span><br><span class="line"><span class="comment">//                        NSLog(@"✅resolutionCanceling:%@,thread:%@,coast:%.2f",hosting,[NSThread currentThread],coast);</span></span><br><span class="line"><span class="comment">//#endif</span></span><br><span class="line"><span class="comment">//                        CFHostCancelInfoResolution(hostRef, kCFHostAddresses);</span></span><br><span class="line"><span class="comment">//                        CFRelease(hostRef);</span></span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line"><span class="comment">//                &#125; @catch (NSException *exception) &#123;</span></span><br><span class="line"><span class="comment">//                    NSLog(@"cancelException:name:%@,reason:%@",exception.name,exception.reason);</span></span><br><span class="line"><span class="comment">//                &#125;</span></span><br><span class="line"><span class="comment">//            &#125;);</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (completion) &#123;</span><br><span class="line">                </span><br><span class="line">                [saveResultLock lock];</span><br><span class="line">                <span class="built_in">NSInteger</span> tempIpsCount = tempIps.count;</span><br><span class="line">                [saveResultLock unlock];</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (tempIpsCount &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    </span><br><span class="line">                    [saveResultLock lock];</span><br><span class="line">                    <span class="built_in">NSDictionary</span> * firstHost = tempIps.firstObject;</span><br><span class="line">                    [saveResultLock unlock];</span><br><span class="line">                    </span><br><span class="line">                    <span class="built_in">NSString</span> * ip = firstHost[<span class="string">@"ip"</span>];</span><br><span class="line">                    <span class="built_in">NSString</span> * host = firstHost[<span class="string">@"host"</span>];</span><br><span class="line"></span><br><span class="line">                    completion(ip,host,results.copy,coast,<span class="literal">nil</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    completion(<span class="literal">nil</span>,<span class="literal">nil</span>,<span class="literal">nil</span>,coast,[<span class="built_in">NSError</span> errorWithDomain:<span class="string">@"resolutionError"</span> code:<span class="number">-9999</span> userInfo:<span class="literal">nil</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">@catch</span> (<span class="built_in">NSException</span> *exception) &#123;</span><br><span class="line">        exceptionHandler(exception);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//j检查IP是否是常规IP</span></span><br><span class="line">+(<span class="built_in">BOOL</span>)checkIPValid:(<span class="built_in">NSString</span> *)ip&#123;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//https://blog.csdn.net/weixin_34128237/article/details/85034993?depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-12&amp;utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-12</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">BOOL</span> valid = <span class="literal">YES</span>;</span><br><span class="line">    <span class="keyword">@try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="literal">nil</span> || ![ip isKindOfClass:<span class="built_in">NSString</span>.class] || ip.length == <span class="number">0</span> ) &#123;</span><br><span class="line">            valid = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSArray</span> * blackList = @[<span class="string">@"127.0.0.1"</span>,<span class="string">@"0.0.0.0"</span>,<span class="string">@"224.0.0.1"</span>,<span class="string">@"255.255.255.255"</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ([blackList containsObject:ip]) &#123;</span><br><span class="line">            valid = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ([ip containsString:<span class="string">@" "</span>]) &#123;</span><br><span class="line">            valid = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ([ip hasPrefix:<span class="string">@"##"</span>]) &#123;</span><br><span class="line">            valid = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ([ip hasPrefix:<span class="string">@"169.254."</span>]) &#123;</span><br><span class="line">            valid = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ([ip hasPrefix:<span class="string">@"10."</span>]) &#123;</span><br><span class="line">            valid = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ([ip hasPrefix:<span class="string">@"192.168."</span>]) &#123;</span><br><span class="line">            valid = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ([ip hasPrefix:<span class="string">@"172."</span>]) &#123;</span><br><span class="line">            <span class="built_in">NSArray</span> * ips = [ip componentsSeparatedByString:<span class="string">@"."</span>];</span><br><span class="line">            <span class="keyword">if</span> (ips.count == <span class="number">4</span>) &#123;</span><br><span class="line">                <span class="built_in">NSString</span> * ip1 = ips[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span> (ip1.integerValue &gt;=<span class="number">16</span> &amp;&amp; ip1.integerValue &lt;=<span class="number">32</span>) &#123;</span><br><span class="line">                    valid = <span class="literal">NO</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">@catch</span> (<span class="built_in">NSException</span> *exception) &#123;</span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">@finally</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> valid;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    [<span class="built_in">CLSDKNetWorkingManager</span> resolution:API_SDK_URL queueAttr:DISPATCH_QUEUE_SERIAL useHttpDNS:<span class="literal">NO</span> dispatchCallBackQueue:<span class="literal">nil</span> timeOut:timeOut &gt; <span class="number">1.0</span> ? timeOut<span class="number">-1.0</span> : timeOut completion:^(<span class="built_in">NSString</span> * _Nullable bestHostIP, <span class="built_in">NSString</span> * _Nullable bestHost, <span class="built_in">NSDictionary</span> * _Nullable hosters, <span class="built_in">NSTimeInterval</span> coast, <span class="built_in">NSError</span> * _Nullable error) &#123;</span><br><span class="line">        </span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> DEBUG</span></span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"✅bestHostIP:%@ bestHost:%@ \nhosters:%@ \ncoast:%.2f \n"</span>,bestHostIP,bestHost,hosters,coast);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    &#125;];</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> plugins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins自动化部署iOS项目</title>
      <link href="/2018/04/09/Jenkins%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2iOS%E9%A1%B9%E7%9B%AE/"/>
      <url>/2018/04/09/Jenkins%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2iOS%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>  &#8195;&#8195;最近折腾了下<code>Jenkins</code>的自动化部署，写了点总结经验。</br><br>  &#8195;&#8195;[<code>Jenkins</code>](<a href="https://jenkins.io&quot;" target="_blank" rel="noopener">https://jenkins.io&quot;</a> Jenkins”) 是一个开源软件项目，是基于<code>Java</code>开发的一种持续集成工具，用于监控持续重复的工作，旨在提供一个开放易用的软件平台，使软件的持续集成变成可能。</br><br><code>Jenkins</code>功能包括：</br><br><code>1、</code>持续的软件版本发布/测试项目。</br><br><code>2、</code>监控外部调用执行的工作。</br></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</br></h2><p>本文中，我们将用<code>Jenkins</code>安装在一台闲置的mac上（mac需要安装Xcode）,通过<code>远程登录</code>进行项目配置。通过远程点击一个URL<code>http://192.168.2.182:8080/job/SifangManager/buildWithParameters?token=remotebuild&amp;BUILD_SHORTVERSION_NUNBER=2.0.1&amp;BUILD_VERSION_NUNBER=2.0.1.3</code>即可对<code>iOS</code>项目进行自动化打包<code>ipa</code>并发布到<code>itunsConnect</code>,完成后会有邮件通知。</p><blockquote><p>关于mac远程登录：</br><br>  在<font color=red>要登录的远程电脑</font>上打开<code>系统偏好设置</code>-&gt;<code>共享</code>，勾选<code>远程登录</code>,可以看到提示如图，</p></blockquote><!-- ![mac远程登录设置](2018-04-09/Window.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_0.png"></br></br>确认自己的电脑和远程电脑在同一局域网下，在<font color=red>自己的电脑</font>上终端输入<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh 要登录的远程电脑用户名<span class="meta">@要登录的远程电脑IP</span></span><br></pre></td></tr></table></figure>根据提示输入远程电脑密码即可<font color=red>已下操作均在远程登录环境下操作</font><p><code>Jenkins</code>安装:</br><br>  可用过官网下载对应平台的安装包安装，或者下载通用的war包，这里我们用<code>homebrew</code>安装,如果电脑上没有装<code>homebrew</code>，<a href="https://brew.sh/index_zh-cn" target="_blank" rel="noopener" title="homebrew">请点此处</a></p><p>  终端输入安装命令：<br>  <figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span><span class="keyword">jenkins</span></span><br></pre></td></tr></table></figure><br>  安装成功后，输入<br>  <figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">jenkins</span></span><br></pre></td></tr></table></figure><br>  等待出现<code>Jenkins is fully up and running</code>字样即正常启动</br>,启动后不要关闭终端，否则会强制结束<code>Jenkins</code>,要重启、停止<code>Jenkins</code>，建议通过<code>Jenkins</code>API来操作，下面会说<br>  <!-- ![jenkins](2018-04-09/1__ssh_yahan_192_168_2_186__ssh_.png) --><br>  <img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_1.png"><br>  <figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注：jenkins默认占用电脑<span class="number">8080</span>端口，如果此端口已经被占用，启动jenkins会出现address has already used相关错误，那么请修改jenkins的端口号</span><br></pre></td></tr></table></figure><br>  启动成功后，打开浏览器，输入<br>  <figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">登录的远程电脑IP:<span class="number">8080</span></span><br></pre></td></tr></table></figure><br>  <font color=gray size=1>注：如果修改了jenkins端口号，请使用修改过的端口号替换8080</font></p><p>  第一次启动界面<br>  <!-- ![第一次启动界面](2018-04-09/Mac中jenkins的使用——自动构建.png) --><br>  <img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_2.png"><br>  如图中提示，用vi或者cat命令打开<code>/Users/远程电脑用户名/.jenkins/secrets/initinalAdminPassword</code>文件，使用其中的密码作初始化密码，点击Continue</p><p>  根据提示安装推荐的插件</br><br>  根据提示创建一个常用登录账户，以后都用创建的这个账户密码登录</p><p>  进入Jenkins首页：<br>  <!-- ![进入Jenkins首页](2018-04-09/Dashboard__Jenkins.png) --><br>  <img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_3.png"></p><p>  推荐使用<code>JenkinsAPI</code>重启、退出Jenkins服务(<code>登录的远程电脑IP:8080/API</code>)：</br><br>  <figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//退出</span></span><br><span class="line"><span class="symbol">http:</span><span class="comment">//192.168.2.182:8080/exit</span></span><br><span class="line"><span class="comment">//重启</span></span><br><span class="line"><span class="symbol">http:</span><span class="comment">//192.168.2.182:8080/restart</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//在载入的页面中点击确认按钮即可</span></span><br></pre></td></tr></table></figure><br>  <!-- ![在载入的页面中点击确认按钮即可](2018-04-09/Window_和_Method_Not_Allowed__Jenkins_-2.png) --><br>  <img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_4.png"></p><p>  第一次进入没有项目，选择新建任务，填入项目名称，选择自由风格项目，完成。</br><br>  项目配置页面：<br>  <!-- ![项目配置页面](2018-04-09/测试_Config__Jenkins_.png) --><br>  <img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_5.png"></p><p>  由于是进行iOS打包，有意在配置项目前，先需要下载一个插件，用于管理证书和描述文件。<br>  在<code>Jenkins</code>首页，进入<code>系统管理</code>-&gt;<code>管理插件</code>，<br>  选择<code>可选插件</code>,搜索<code>Keychains and Provisioning Profiles Management</code>,勾选后选择直接安装，安装完成后，进入<code>系统管理</code>页面，在下面选择<code>Keychains and Provisioning Profiles Management</code>选项，进入此插件设置页面<br>  <!-- ![Keychains and Provisioning Profiles Management](2018-04-09/管理Jenkins__Jenkins_.png) --><br>  <img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_6.png"><br>  </br></p>  <!-- ![Keychains and Provisioning Profiles Management2](2018-04-09/测试_Jenkins_.png) -->  <img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_7.png"><p>在上传钥匙串文件处，可以不用上传，但需要在远程电脑上安装证书和描述文件，最好用远程电脑的Xcode手动打包一次，确保证书正确。<br>在配置文件路径中输入</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/User/</span>远程电脑用户名<span class="regexp">/Library/</span>MobileDevice<span class="regexp">/Provisioning Profiles</span></span><br></pre></td></tr></table></figure><p>保存退出</p><p>配置邮箱服务器，用于发送构建结果通知邮件：<br>进入<code>系统管理</code>-&gt;<code>系统设置</code>,可以看到<code>Extended E-mail Notification</code>（扩展邮件通知）和<code>邮件通知</code>，我们将使用<code>Extended E-mail Notification</code>，它比jenkins自带的<code>邮件通知</code>具有跟多的功能。<br><font color=gray size=1>注：如果没有扩展邮件通知，可在插件中搜索Email，找到扩展邮件通知（Extended E-mail Notification）插件安装</font></p><p>这里将配置一个邮件发送服务，当构建成功或失败时，jenkins会已此处配置的邮件服务，以此处配置的邮箱账户发送给你设置的收件箱。<br>这里我用的是189邮箱来发送，用qq邮箱来接收。<br><font color=gray size=1>注：可以用同一个邮箱，既发也收，但最好准备两个邮箱账号，可以是相同的邮箱服务器，如果只用一个邮箱既作为发件箱又作为收件箱，那么对于部分邮箱服务器是发不出去的</font><br>SMTP服务器：填发件的邮箱SMTP服务器，比如189邮箱的是<code>smtp.189.cn</code>，如果不知道，可以进入对应的网页版邮箱，进入账号设置，找到IMAP/SMTP服务，选择开启。一般旁边都会有相关的配置说明。</p><p>以下是189邮箱的SMTP设置<br><font color=gray size=1><br>接收邮件服务器：imap.189.cn</br><br> 发送邮件服务器：smtp.189.cn</br><br> 账户名：您的189邮箱账户名</br><br> 密码：您的189邮箱密码</br><br> 电子邮件地址：您的189邮箱的完整邮件地址</br></p><p> 如何设置POP3服务的SSL加密方式？</br><br> 强烈建议勾选SSL加密方式，能够有效的防止账户被盗以及邮件被窃取等行为，</br><br> 使用SSL的通用配置如下：</br><br> 接收邮件服务器：pop.189.cn，使用SSL，端口号995</br><br> 发送邮件服务器：smtp.189.cn，使用SSL，端口号465或587</br><br> 账户名：您的189邮箱账户名</br><br> 密码：您的189邮箱密码</br><br> 电子邮件地址：您的189邮箱的完整邮件地址</font></p><p>默认后缀填<code>@189.cn</code>,勾选<code>使用SMTP身份验证</code>,用户名密码填入189邮箱<code>18055352658@189.cn</code>和邮箱密码。<br><font color=red size=1>特别注意：在系统设置的<code>Jenkins Location</code>中，将<code>系统管理员邮件地址</code>也设置成你的发件箱地址，这里我就填<code>18055352658@189.cn</code>，如果这两处不一致可能导致发不出去</br></font><br>勾选SSL,端口号根据上面189邮箱配置说明，我填入465。<br>默认收件人填你像设置的收件邮箱，这里我填我的QQ邮箱<code>850594374@qq.com</code>，注意到默认收件人旁边问问号提示里，说了这里填的在后面可以用<code>$DEFAULT_RECIPIENTS</code>获取到<br>在<code>Default Triggers</code>中，勾选你想要发送邮件的触发方式，默认是<code>Failure - Any</code>，任何构建失败都发送。<br>我们使用下面的<code>邮件通知</code>自带的邮件测试来看看能不能发送：<br>在<code>邮件通知</code>填入和上面相同的输入，在<code>高级</code>里也填一样的，勾选<code>通过发送测试邮件测试配置</code>,在下面填入你的收件箱，这里我填我的QQ邮箱。点击<code>Test Configuration</code>，发送测试邮件。查看收件箱应该能收到一封来自你的SMTP发件箱发来的测试邮箱。</p><!-- ![](2018-04-09/Configure_System__Jenkins_.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_8.png"><h2 id="下面进入正题，构建项目的配置："><a href="#下面进入正题，构建项目的配置：" class="headerlink" title="下面进入正题，构建项目的配置："></a>下面进入正题，构建项目的配置：</h2><p>在项目构建配置页面，有几大模块：</br><br><code>General</code>：项目基本设置</br><br><code>源码管理</code>：项目源代码管理,Git/SVN等配置</br><br><code>构建触发器</code>：触发构建的设置，比如我在提交代码后自动开始构建、按计划时间构建、通过远程url触发构建等，这块可以在最后设置</br><br><code>构建环境</code>：项目构建环境设置，由于我是使用脚本打包，并且已经在远程电脑上配置好了证书和描述文件，这块不需要任何设置</br><br><code>构建</code>：项目构建的具体步骤，可以通过相关插件添加步骤或者shell脚本</br><br><code>源码管理</code>：项目源代码管理</br><br><code>构建后操作</code>：构建完成后需要的后续操作，比如上传到蒲公英等内测平台</p><p>由于公司使用SVN管理代码，并且SVN下有多项目多分支，所以用参<code>数化构建</code>来使配置更加灵活</br><br><font color=gray size=1><code>数化构建</code>是指在构建开始前，设置一些参数作为变量，在后面的构建中，通过<code>$参数名</code>或者<code>${参数名}</code>的形式来获取参数的值，这是shell中获取变量的值的语法，由于本文使用脚本打包，后面会介绍<code>shell</code>的几个常用命令</font></br></br></p><p>在<code>参数化构建</code>之前,我们需要设置项目的存放位置，由于Jenkins默认的位置是在    <code>/Users/用户名/.jenkins</code>下，由于是隐藏目录，后面执行脚本会有诸多问题，这里我们将项目的存放目录改为<code>/Users/用户名/Documents/jenkins/workSpace</code>下，在<code>General</code>中，选择<code>高级</code>，勾选<code>使用自定义的工作空间</code>，在目录中填入<code>/Users/用户名/Documents/jenkins/workSpace</code>，显示名称可不填，应用保存。<br><font color=gray size=1>注：这里设置的<code>使用自定义的工作空间</code>仅对当前项目有效</font></br></br></p><p>回到<code>参数化构建</code>，首先勾选<code>参数化构建</code>，选择<code>添加参数</code></p><blockquote></blockquote><!-- ![](2018-04-09/测试_Config__Jenkins_-2.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_9.png">`Credentials Parameter`：凭证参数，在构建中用`$参数名`获取的将是凭证的ID，具体怎么用尚不清楚😥</br>`List Subversion tags(and more)`：SVN分支/tag列表，对于SVN多分枝或者多Tag的，可以使用此参数手动选择想要构建的分支。</br>`字符参数`：一段简短的字符/文本值</br>`文本参数`：文本值，对于简短的文本，也可以使用`字符参数`</br>`密码参数`：显示为*代替的密码形式的文本参数，取值时取的直接是文本值</br>`运行时参数`：感觉没什么用，也不知道有什么用😥</br>`选项参数`：根据设置的选项进行单选，设置选项：选项间需要换行，第一行为默认选中`布尔值参数`：可以提供Bool选择,取值时取的将是'true'/'false'字符</br><p><font color=gray size=1>注：我的SVN项目目录结构如图，这里填的请根据你的实际情况</p><!-- ![](2018-04-09/wanglijun.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_10.png"></font></br></br><p>首先添加<code>List Subversion tags(and more)</code>参数，名称填入<code>SVN_BRANCHES</code>,Url填入SVN地址（到当前项目地址），<code>Credentials</code>中添加凭证，填SVN账号密码，add后回来选择刚刚的凭证。<code>Default value</code>中填入<code>trunk</code>,这样Jenkins在检出时会创建 <code>Url最后一个路径/Default value</code>结构的目录</p><!-- ![](2018-04-09/测试_Config__Jenkins_-3.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_11.png"><p>由于项目有多target，所以添加一个选项参数来选择target对应的Scheme,名称:<code>SCHEME_NAME</code>,选项填写形式如下</p><!-- ![](2018-04-09/测试_Config__Jenkins_的_4.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_12.png"><p>添加两个 版本号 <code>字符参数</code>，用于设定打包版本号<code>BUILD_SHORTVERSION_NUNBER</code>:打包的版本(version)号，例如2.2.0</br><br><code>BUILD_VERSION_NUNBER</code>:打包的构建(build)号，例如2.2.0.1</br></p><!-- ![](2018-04-09/测试_Config__Jenkins_-4.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_13.png"></br><p>添加<code>字符参数</code> 项目的SVN根目录（相对于jenkins的workSpace路径）<code>SVN_LOCAL_PATH</code>，由于在后面的脚本中，jenkins只提供项目workSpace路径路径的参数，所以这里添加一个参数作为项目路径，并且是相对于jenkins的workSpace路径。默认值<code>SVNUrl最后一个路径/${SVN_BRANCHES}</code>，<code>${SVN_BRANCHES}</code>是前面设置的分支</br></br></p><p>添加 <code>字符参数</code> <code>WORKSPACEPATH</code>,用于标识xcode项目的workSpace文件所在的目录(相对于jenkins的workSpace路径），默认值<code>${SVN_LOCAL_PATH}/装xcode项目的workSpace文件的文件夹</code>，也即Xcode项目的根目录文件夹</br></br></p><p>添加<code>布尔参数</code> <code>NEED_POD_INSTALL</code>用于标识是否需要<code>pod Install</code>,默认<code>false</code> <code>false</code>:将检测如果项目下有Pods文件夹则不进行<code>pod Install</code>，如果没有，依然会<code>pod Install</code>; <code>true</code>:强制执行<code>pod Install</code>(这个逻辑是在后面的脚本中写的)</br></br></p><p>添加<code>布尔参数</code> <code>NEED_CARTHAGE_UPDATE</code>用于标识是否需要<code>carthage update</code>,默认<code>false</code> <code>false</code>:将检测如果项目下有<code>Carthage</code>文件夹则不进行<code>carthage update</code>，如果没有，依然会<code>carthage update</code>;<code>true</code>:强制执行<code>carthage update</code>(这个逻辑是在后面的脚本中写的)</br></p><p>添加<code>字符参数</code> <code>DEFAULT_RECIPIENTS</code>用于临时设置收件人邮箱。默认值填入收件人邮箱</br></br></p><p>添加<code>字符参数</code> <code>ITUNNES_ACCOUNT</code>用于设置开发者账号，默认值填入开发者账号</br></br></p><p>添加<code>密码参数</code> <code>ITUNNES_ACCOUNT_PASSWORD</code> 用于设置开发者账号密码。</br><br><font color=red size=1>注意：如果开启了双重验证，需要到<a href="https://appleid.apple.com/account/manage" target="_blank" rel="noopener" title="apple官网">apple官网</a>设置双重验证的独立密码,然后将独立密码填入<br></br></font></p><p>添加<code>文件参数</code>,用于导出ipa包时，<code>-exportOptionsPlist</code>需要此文件<code>文件路径</code>填入<code>archive/ExportOptions_dis_AppStore.plist</code>,这里路径相对于Jenkins的workSpace目录。 </br><br><font color=gray size=1><br>这个文件打包ipa是必须要的，这里的文件参数是用来将自己电脑上的这个文件传到远程电脑,如果远程电脑对应的路径下已经存在这个文件，就不必传了，所以只需第一次传一下，或者通过别的方式直接弄过去。</br><br>这个文件里面是一些开发者账号信息，对于同一个账号的打包，经测试可以共用这一个。</br><br>这个文件的怎么拿到？</br><br>用Xcode手动导出ipa,在导出的文件夹里，除了ipa文件外，还要一个ExportOptions的.plist文件，就是这个文件。</br><br>也可以根据我的文件模板自己写一个:</br></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">plist</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//Apple//DTD PLIST 1.0//EN"</span> <span class="meta-string">"http://www.apple.com/DTDs/PropertyList-1.0.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>method<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>app-store<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>signingStyle<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>automatic<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>stripSwiftSymbols<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>teamID<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>你的TeamID<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>uploadSymbols<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure></font></br>`参数化构建`设置完了，对于所有的参数，建议都设置默认值，以便于远程构建时直接使用默认值，有些参数一旦设置默认值可以不用再改，有些项目比较简单的可以根据实际情况，不用上面的一些参数，而直接在脚本里写死。</br><p>下面设置<code>源码管理</code></br><br>这里选择<code>Subversion</code>,URL填入<code>svn://wanglj@192.168.2.24//..项目路径/$SVN_BRANCHES</code>，<code>$SVN_BRANCHES</code>是上面的参数选择的分支，所以实际的SVN检出的项目是所选的分支。<br>选择SVN凭证，<code>Local module directory</code>填入SVN检出的路径（相对于jenkins的workSpace路径）。我填入<code>SVNUrl最后一个路径/${SVN_BRANCHES}</code>, <code>Repository depth</code>选择<code>infinity</code>无穷。应用保存。</br><br>现在可以进行第一步测试了，回到项目首页，会有一个<code>Build with Parameters</code>选项，点击进入参数选择页面</p><!-- ![](2018-04-09/思方经理人Jenkins__Jenkins__和_2018-04-09_md_—___wljblog_source__posts.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_21.png"></br></br><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_14.png"><!-- ![](2018-04-09/Jenkins-2.png) --></br>如果上面的都正常，特别是SVN的分支可以选择的话（SVN这个要特别注意路径对不对，填入选项的直接填实际文本，不要经过unIcode或者其他编码），那就开始下一步，写构建脚本。</br></br>在`构建`中，添加构建步骤，选`Execute shell`在弹出的脚本框里输入shell代码</br>> `bash`脚本常用命令/语法</br>`${参数名}`：取参数值</br>`$(命令)`：通过执行命令来取值值</br>`$(sed -n '1p' 文件)`：读取文件第一行内容</br>`echo 字符串`：打印字符串</br>`echo 字符串 >>文件`：追加输出到文件中</br>`-d "文件夹路径/"`：判断文件夹是否存在</br>`-e "文件路径"`：判断文件是否存在</br>`-f "文件路径"`：判断文件是否存在并且是一般文件(regular file)(不是目录或者设备文件)</br>`-z 字符串`：判断字符串长度为0</br>`A =~ B`：判断字符串A是否包含B</br>`A != B`：字符串A不等于B</br>`rm -f 文件`：删除文件</br>`mkdir 文件夹路径`：新建文件夹（上级目录必须已经存在，否则无法创建）</br>`mkdir -p 文件夹路径`：新建文件夹（上级目录如果不存在，会连续创建不存在的目录）</br>`curl 远程文件`：下载文件</br>`curl 远程文件 -o 本地路径`：下载文件保存到指定路径</br>`|`：管道，将前一个命令的输出作为后一个命令的输入</br>`\`：命令换行连接，显示为换行，但链接为一个命令。`\`前需要空格，不要紧贴前面的命令</br>`:<< 注释 !`：块注释</br>`#注释`：单行注释</br>`exit 状态码`：结束当前脚本，相当于其他语言的return，shell默认0为成功，非0为失败<font color=gray size=1>注：当命令中有字符串包含空格时，shell会默认截断，将其识别为两个命令导致出错，因此要用`""`抱住含有空格的参数，有时还需要在空格前用`\`来转义空格</font></br></br><p>这里我用了三个脚本：</br><br>第一个脚本用来判断参数化时的版本号或者远程打包命令的版本号是否符合一般要求。</br><br><font color=gray size=1>由于远程命令是没有参数化构建时的手动修改参数的，所以是默认使用参数化构建配置的默认值。远程命令后面的参数可以对参数化构建的参数进行重新设置。</font></br></br><br>第二个脚本判断是否需要执行<code>Pod install</code>和是否需要执行<code>carthage update</code></br><br>第三个脚本进行<code>Archive</code>、<code>export IPA</code>、<code>commit To itunsConnect</code>操作</p><p>先贴出三个脚本的完整代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#shell_1</span></span><br><span class="line">BuildError_FILE_PATH=<span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/build/BuildError.txt"</span></span><br><span class="line"><span class="keyword">if</span> [ -f <span class="string">"<span class="variable">$&#123;BuildError_FILE_PATH&#125;</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"存在上次的BuildError.txt：删除"</span></span><br><span class="line">rm -f <span class="variable">$&#123;BuildError_FILE_PATH&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ -z <span class="variable">$BUILD_VERSION_NUNBER</span> ]] || [[ -z <span class="variable">$BUILD_SHORTVERSION_NUNBER</span> ]]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"未设置BUILD_VERSION_NUNBER、BUILD_SHORTVERSION_NUNBER，将使用项目中的版本号打包"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#InfoPlist文件路径</span></span><br><span class="line">    INFOPLIST_FILE_PATH=<span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/<span class="variable">$&#123;WORKSPACEPATH&#125;</span>/SF-Manger/Supporting Files/Info.plist"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#BUILD_SHORTVERSION_NUNBER=2.2.5</span></span><br><span class="line">    <span class="comment">#BUILD_VERSION_NUNBER=2.2.5.3</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#版本修改日志</span></span><br><span class="line">    LOG_Build=<span class="string">"打包Build号=<span class="variable">$&#123;BUILD_VERSION_NUNBER&#125;</span>"</span></span><br><span class="line">    LOG_Version=<span class="string">"打包Version号=<span class="variable">$&#123;BUILD_SHORTVERSION_NUNBER&#125;</span>"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;LOG_Build&#125;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;LOG_Version&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">#判断BUILD_VERSION_NUNBER是否包含BUILD_SHORTVERSION_NUNBER</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="variable">$BUILD_VERSION_NUNBER</span> =~ <span class="variable">$BUILD_SHORTVERSION_NUNBER</span> ]] &amp;&amp; [ <span class="string">"<span class="variable">$&#123;BUILD_VERSION_NUNBER&#125;</span>"</span> != <span class="string">"<span class="variable">$&#123;BUILD_SHORTVERSION_NUNBER&#125;</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"版本号校验正常"</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"版本号校验异常"</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/build/"</span> ];<span class="keyword">then</span></span><br><span class="line">        mkdir <span class="variable">$&#123;WORKSPACE&#125;</span>/build</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/build/文件夹已经存在"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">echo</span> 199 &gt;&gt; <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/build/BuildError.txt"</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"版本号校验异常，请检查版本号:<span class="variable">$&#123;LOG_Build&#125;</span> <span class="variable">$&#123;LOG_Version&#125;</span>"</span> &gt;&gt; <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/build/BuildError.txt"</span></span><br><span class="line">        <span class="built_in">exit</span> 199</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$&#123;SVN_LOCAL_PATH&#125;</span></span><br><span class="line">    <span class="comment">#更新最新的SVN上的Info.plist</span></span><br><span class="line">    svn update <span class="string">"<span class="variable">$&#123;INFOPLIST_FILE_PATH&#125;</span>"</span> \</span><br><span class="line">    <span class="comment">#--username $&#123;SVN_CREDENTIALS_NAME&#125; \</span></span><br><span class="line">    <span class="comment">#--password $&#123;SVN_CREDENTIALS_PASSWORD&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#修改版本号</span></span><br><span class="line">    /usr/libexec/PlistBuddy -c <span class="string">"Set :CFBundleVersion <span class="variable">$&#123;BUILD_VERSION_NUNBER&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;INFOPLIST_FILE_PATH&#125;</span>"</span></span><br><span class="line">    /usr/libexec/PlistBuddy -c <span class="string">"Set :CFBundleShortVersionString <span class="variable">$&#123;BUILD_SHORTVERSION_NUNBER&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;INFOPLIST_FILE_PATH&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#svn resolved $&#123;INFOPLIST_FILE_PATH&#125;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"jenkins提交，修改Build&amp;Version：<span class="variable">$&#123;LOG_Build&#125;</span> <span class="variable">$&#123;LOG_Version&#125;</span>"</span></span><br><span class="line">    svn commit -m <span class="string">"jenkins提交，修改Build&amp;Version：<span class="variable">$&#123;LOG_Build&#125;</span> <span class="variable">$&#123;LOG_Version&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;INFOPLIST_FILE_PATH&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#shell_2</span></span><br><span class="line"><span class="comment">#检查是否有之前的shell出现异常，如果有，则停止直接退出</span></span><br><span class="line">BuildError_FILE_PATH=<span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/build/BuildError.txt"</span></span><br><span class="line">ERRORCODE=$(sed -n <span class="string">'1p'</span> <span class="variable">$&#123;BuildError_FILE_PATH&#125;</span>)</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$&#123;BuildError_FILE_PATH&#125;</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"存在BuildError.txt"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"ERRORCODE:<span class="variable">$&#123;ERRORCODE&#125;</span>"</span></span><br><span class="line">    <span class="comment">#字符串不为空.就是长度不为0.</span></span><br><span class="line">    <span class="keyword">if</span> [ ! -z <span class="string">"<span class="variable">$ERRORCODE</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"读取BuildError.txt，ERRORCODE不为空"</span></span><br><span class="line">        <span class="comment">#判断字符串是否相等</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$ERRORCODE</span>"</span> != <span class="string">"0"</span> ];<span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"读取BuildError.txt，ERRORCODE不为0,构建失败，停止后续的构建"</span></span><br><span class="line">            <span class="built_in">exit</span> 198</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"未检测到BuildError，继续构建"</span></span><br><span class="line">rm -f <span class="variable">$&#123;BuildError_FILE_PATH&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/<span class="variable">$&#123;WORKSPACEPATH&#125;</span>"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;NEED_POD_INSTALL&#125;</span> == <span class="literal">true</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"参数构建设置pod install == true,开始 pod install"</span></span><br><span class="line">pod install --verbose</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/<span class="variable">$&#123;WORKSPACEPATH&#125;</span>/Pods/"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"参数构建设置pod install == false,但Pods/文件夹不存在,开始 pod install"</span></span><br><span class="line">  pod install --verbose</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Pods/文件夹已经存在,跳过 pod install"</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;NEED_CARTHAGE_UPDATE&#125;</span> == <span class="literal">true</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"参数构建设置carthage update == true,开始 carthage update"</span></span><br><span class="line">carthage update --verbose</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/<span class="variable">$&#123;WORKSPACEPATH&#125;</span>/Carthage/"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"参数构建设置carthage update == false,但Carthage/文件夹不存在,开始 carthage update"</span></span><br><span class="line">  carthage update --verbose</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"Carthage/文件夹已经存在，跳过 carthage update"</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#shell_3</span></span><br><span class="line"><span class="comment">#检查是否有之前的shell出现异常，如果有，则停止直接退出</span></span><br><span class="line">BuildError_FILE_PATH=<span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/build/BuildError.txt"</span></span><br><span class="line"><span class="comment">#读取BuildError.txt第一行</span></span><br><span class="line">ERRORCODE=$(sed -n <span class="string">'1p'</span> <span class="variable">$&#123;BuildError_FILE_PATH&#125;</span>)</span><br><span class="line"><span class="keyword">if</span> [ -f <span class="variable">$&#123;BuildError_FILE_PATH&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"存在BuildError.txt"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"ERRORCODE:<span class="variable">$&#123;ERRORCODE&#125;</span>"</span></span><br><span class="line">    <span class="comment">#字符串不为空.就是长度不为0.</span></span><br><span class="line">    <span class="keyword">if</span> [ ! -z <span class="string">"<span class="variable">$ERRORCODE</span>"</span> ];<span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"读取BuildError.txt，ERRORCODE不为空"</span></span><br><span class="line">        <span class="comment">#判断字符串是否相等</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$ERRORCODE</span>"</span> != <span class="string">"0"</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"读取BuildError.txt，ERRORCODE不为0,构建失败，停止后续的构建"</span></span><br><span class="line">            <span class="built_in">exit</span> 198</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"未检测到BuildError，继续构建"</span></span><br><span class="line">rm -f <span class="variable">$&#123;BuildError_FILE_PATH&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WORKSPACEFILENAME=<span class="variable">$SCHEME_NAME</span></span><br><span class="line">IPA_FILENAME=<span class="variable">$SCHEME_NAME</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Archive the application</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;WORKSPACEPATH&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ArchivePath=<span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/archive/<span class="variable">$&#123;SCHEME_NAME&#125;</span>/<span class="variable">$&#123;BUILD_SHORTVERSION_NUNBER&#125;</span>/<span class="variable">$&#123;BUILD_VERSION_NUNBER&#125;</span>/<span class="variable">$&#123;SCHEME_NAME&#125;</span>.xcarchive"</span></span><br><span class="line"><span class="comment">#如果已经存在build号对应的.xcarchive，就不再archive</span></span><br><span class="line">:&lt;&lt;!</span><br><span class="line">-e filename 如果 filename存在，则为真</span><br><span class="line">-d filename 如果 filename为目录，则为真</span><br><span class="line">-f filename 如果 filename为常规文件，则为真</span><br><span class="line">!</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"==&gt;ArchivePath=<span class="variable">$&#123;ArchivePath&#125;</span>"</span></span><br><span class="line"><span class="keyword">if</span> [ -e <span class="variable">$&#123;ArchivePath&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"已存在<span class="variable">$&#123;SCHEME_NAME&#125;</span>.xcarchive，跳过xcarchive"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"未检测到<span class="variable">$&#123;SCHEME_NAME&#125;</span>.xcarchive，开始xcarchive"</span></span><br><span class="line"></span><br><span class="line">    ArchiveDirectoryPath=<span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/archive/<span class="variable">$&#123;SCHEME_NAME&#125;</span>/<span class="variable">$&#123;BUILD_SHORTVERSION_NUNBER&#125;</span>/<span class="variable">$&#123;BUILD_VERSION_NUNBER&#125;</span>"</span></span><br><span class="line">    <span class="keyword">if</span> [ ! -d <span class="string">"<span class="variable">$&#123;ArchiveDirectoryPath&#125;</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">    mkdir -p <span class="variable">$&#123;ArchiveDirectoryPath&#125;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;ArchiveDirectoryPath&#125;</span> 文件夹已经存在"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解锁对login.keychain的访问，codesign会用到,『这里直接使用远程电脑的keyChain,所以用远程电脑的密码』</span></span><br><span class="line">    security unlock-keychain -p <span class="string">"123456"</span> ~/Library/Keychains/login.keychain</span><br><span class="line">    <span class="comment"># 清除</span></span><br><span class="line">    xcodebuild clean</span><br><span class="line"></span><br><span class="line">    xcodebuild archive \</span><br><span class="line">    -workspace <span class="variable">$&#123;WORKSPACEFILENAME&#125;</span>.xcworkspace \</span><br><span class="line">    -scheme <span class="string">"<span class="variable">$&#123;SCHEME_NAME&#125;</span>"</span> \</span><br><span class="line">    -archivePath <span class="variable">$&#123;ArchivePath&#125;</span> \</span><br><span class="line">    -configuration Release</span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">IPA_FILEPATH=<span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/archive/<span class="variable">$&#123;SCHEME_NAME&#125;</span>/<span class="variable">$&#123;BUILD_SHORTVERSION_NUNBER&#125;</span>/<span class="variable">$&#123;BUILD_VERSION_NUNBER&#125;</span>/<span class="variable">$&#123;IPA_FILENAME&#125;</span>.ipa"</span></span><br><span class="line"><span class="comment">#如果已经存在build号对应的.ipa，就不再exportArchive</span></span><br><span class="line"><span class="keyword">if</span> [ -e <span class="variable">$&#123;IPA_FILEPATH&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"已存在<span class="variable">$&#123;SCHEME_NAME&#125;</span>.ipa，跳过exportArchive"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"未检测到<span class="variable">$&#123;SCHEME_NAME&#125;</span>.ipa，开始exportArchive"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 导出ipa</span></span><br><span class="line">  xcodebuild \</span><br><span class="line">  -exportArchive \</span><br><span class="line">  -archivePath <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/archive/<span class="variable">$&#123;SCHEME_NAME&#125;</span>/<span class="variable">$&#123;BUILD_SHORTVERSION_NUNBER&#125;</span>/<span class="variable">$&#123;BUILD_VERSION_NUNBER&#125;</span>/<span class="variable">$&#123;SCHEME_NAME&#125;</span>.xcarchive"</span> \</span><br><span class="line">  -exportOptionsPlist <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/archive/ExportOptions_dis_AppStore.plist"</span> \</span><br><span class="line">  -exportPath <span class="string">"<span class="variable">$&#123;WORKSPACE&#125;</span>/archive/<span class="variable">$&#123;SCHEME_NAME&#125;</span>/<span class="variable">$&#123;BUILD_SHORTVERSION_NUNBER&#125;</span>/<span class="variable">$&#123;BUILD_VERSION_NUNBER&#125;</span>"</span> \</span><br><span class="line">  -quiet</span><br><span class="line"></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#upload To itunsConnect</span></span><br><span class="line">ALTOOLPATH=/Applications/Xcode.app/Contents/Applications/Application\ Loader.app/Contents/Frameworks/ITunesSoftwareService.framework/Versions/A/Support/altool</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#验证APP</span></span><br><span class="line"><span class="string">"<span class="variable">$&#123;ALTOOLPATH&#125;</span>"</span> --validate-app \</span><br><span class="line">-f <span class="variable">$&#123;IPA_FILEPATH&#125;</span> \</span><br><span class="line">-u <span class="variable">$&#123;ITUNNES_ACCOUNT&#125;</span> \</span><br><span class="line">-p <span class="variable">$&#123;ITUNNES_ACCOUNT_PASSWORD&#125;</span> \</span><br><span class="line">--output-format xml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#上传APP</span></span><br><span class="line"><span class="string">"<span class="variable">$&#123;ALTOOLPATH&#125;</span>"</span> --upload-app \</span><br><span class="line">-f <span class="variable">$&#123;IPA_FILEPATH&#125;</span> \</span><br><span class="line">-u <span class="variable">$&#123;ITUNNES_ACCOUNT&#125;</span> \</span><br><span class="line">-p <span class="variable">$&#123;ITUNNES_ACCOUNT_PASSWORD&#125;</span> \</span><br><span class="line">--output-format xml</span><br></pre></td></tr></table></figure><p>由于jenkins的脚本构建，对于多个脚本，如果前面的失败了后面的脚本依然会进行，为了将一些明显的错误出现后不再执行后续操作（打包一次的时间太长了），对于版本号不符合一般要求的，我将错误信息保存在<code>${WORKSPACE}/build/BuildError.txt</code>中，先检查BuildError.txt如果有错误则直接退出。</br><br><code>/usr/libexec/PlistBuddy</code>：专门处理Plist的工具，修改版本号是通过直接修改项目的info.plist文件的<code>CFBundleVersion</code>和<code>CFBundleShortVersionString</code>值实现的，注意修改前先拉取为SVN版本，修改后要提交SVN</br><br>由于打包上传等命令比较固定，不再说明。具体可参考<a href="https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/man1/xcodebuild.1.html" target="_blank" rel="noopener">官方文档</a>或者这篇文章<a href="https://www.jianshu.com/p/4f4d16326152" target="_blank" rel="noopener">xcodebuild命令官方说明</a></br></p><p>至此，打包上传已经全部配置完成。下面来设置<code>构建后操作</code>来接收工作结果邮件通知。选择添加构建后操作，选择<code>Editable Email Notification</code>,在<code>Project Recipient List</code>接收人列表中，填入<code>$DEFAULT_RECIPIENTS</code>,即参数化构建时的输入的收件人。在<code>Attachments</code>附件中，我填入<code>build/BuildError.txt</code>,即脚本收集的错误信息，路径是相对于jenkins的workSpace路径。<code>Attach Build Log</code>选择<code>Attach Build Log</code>，让邮件带上jenkins收集的log.在<code>高级</code>中，添加<code>Failure-Any</code>和<code>Always</code>两个触发，都设置为<code>send to</code>:<code>Developers</code>和<code>Recipient List</code>。应用保存。</p><p>至此已经完整的配置了构建全过程，可以开始了！<br>选择参数化构建，即可开始了.开始后，可以看到有正在进行的任务</p><!-- ![](2018-04-09/思方经理人Jenkins__Jenkins__和_2018-04-09.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_20.png"></br></br></br>点击任务编号进入此次构建详情，点击`控制台输出`，看看控制台日志</br><!-- ![](2018-04-09/思方经理人Jenkins__25__Jenkins_.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_15.png"></br><!-- ![](2018-04-09/思方经理人Jenkins__30_Console__Jenkins_.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_16.png"></br></br><p>等待任务完成，即可收到邮件。</br></p><!-- ![](2018-04-09/189邮箱-爱简单.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_17.png">打开iTunsConnect，由于过了一段时间进去的，发现已经处理好了</br><!-- ![](2018-04-09/iTunes_Connect.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_18.png"><p>也可以在SVN中看到脚本的修改版本号提交记录</p><!-- ![](2018-04-09/Cornerstone.png) --><img src="http://ovn0zb2g7.bkt.clouddn.com/wljBlog_2018-04-09_0_19.png">]]></content>
      
      
      <categories>
          
          <category> Docs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jenkins </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
